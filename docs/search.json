[{"path":"https://yuntianf.github.io/Longcell/articles/Longcell.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Tutorial for Longcell","text":"tutorial demonstrates use Longcell analyze single cell isoform count data. Due frequent truncations Nanopore long reads sequencing allow identification new ioforms, Longcell stores isoform information sequence splicing sites. instead building cell--isoform matrix, Longcell reveal alternative splicing events splicing sites level. cell--isoform matrix also provided regular single cell RNA seq analysis,like cell type clustering. general steps analysis : regular scRNA-seq gene/isoform expression analysis. identify highly variable splicing sites. differetial alternative splicing analysis cell groups First, load Longcell packages necessary vignette.","code":"options(future.globals.maxSize= 1024*1024^2) library(Longcell) library(Seurat) ## Loading required package: SeuratObject ## Loading required package: sp ##  ## Attaching package: 'SeuratObject' ## The following object is masked from 'package:base': ##  ##     intersect library(dplyr) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union library(future) library(future.apply) library(ggplot2)"},{"path":"https://yuntianf.github.io/Longcell/articles/Longcell.html","id":"annotation","dir":"Articles","previous_headings":"","what":"annotation","title":"Tutorial for Longcell","text":"gene strand information necessary build meta splicing sites downstream analysis, can use gene_bed.rds output LongcellPre package, can also use annotation file indicate gene strand information. table least two columns, one gene name, one gene strand.","code":"gene_bed = readRDS(\"../inst/extdata//annotation//gene_bed.rds\")"},{"path":"https://yuntianf.github.io/Longcell/articles/Longcell.html","id":"data-overview","dir":"Articles","previous_headings":"","what":"data overview","title":"Tutorial for Longcell","text":"using sample colorecatal metastasis liver published paper example. single cell isoform quantification sample generated LongcellPre. can generate Seurat object based cell isoform matrix, just way cell gene matrix. can first general single cell analysis via regular Seurat process get cell cluster information directly use cell type annotation get marker genes annotate cell clusters.","code":"iso_mat = Read10X(\"../inst/extdata/data/isoform/\",gene.column = 1) crc = CreateSeuratObject(counts = iso_mat,project = \"isoform\",min.cells = 3,min.features = 200) ## Warning: Feature names cannot have underscores ('_'), replacing with dashes ## ('-') crc ## An object of class Seurat  ## 17767 features across 236 samples within 1 assay  ## Active assay: RNA (17767 features, 0 variable features) ##  1 layer present: counts suppressWarnings({     crc <-  crc %>%     SCTransform(method = \"glmGamPoi\", verbose = FALSE) %>%     RunPCA(npcs = 30, verbose = FALSE) %>%     RunUMAP(reduction = \"pca\", dims = 1:20,n.neighbors = 30,verbose = FALSE) }) ## Found more than one class \"dist\" in cache; using the first, from namespace 'spam' ## Also defined by 'BiocGenerics' ## Found more than one class \"dist\" in cache; using the first, from namespace 'spam' ## Also defined by 'BiocGenerics' cell_type = read.table(\"../inst/extdata/data/cell_type.txt\",header = TRUE) rownames(cell_type) = cell_type$cell crc$type = cell_type[colnames(crc),\"type\"] DimPlot(crc, reduction = \"umap\", group.by = \"type\",label = TRUE,pt.size = 2)+NoLegend()"},{"path":"https://yuntianf.github.io/Longcell/articles/Longcell.html","id":"single-cell-heterogeneity-of-alterative-splicing","dir":"Articles","previous_headings":"","what":"Single cell heterogeneity of alterative splicing","title":"Tutorial for Longcell","text":"take glance data, can start explore alternative splicing within cell population. Longcell detect alternative splicing event splice site level.first read data downstream analysis. read stored \\(s_1,e_1|s_2,e_2|...\\), \\(s_i\\) means start position exon \\(\\) \\(e_i\\) means end position. first build Splice object based data. isoform sequences expression can revisted Splice object getIsoform() isoform count even sparser gene count, can get confident alternative splicing signals high expression genes, thus can filter lowly expressed genes save computing time. 752 genes preserved downstream \\(\\phi\\) calculation. , can first merge splicing sites always coexisting mutually exclusive meta splicing sites, contain information. step can decrease computation burden. parameter eps can adjusted indicate aggressive merging process .Higher eps leads aggressive merge, may possible lead information loss. merged splicing sites saved metaSite object, example: metaSite object maintains two matrices, one records gene count meta splice site records spliced-count. correspondence meta sites original sites also recorded . generate meta splicing sites, can estimate ratio inter-cell heterogeneity meta site. row result table records \\(\\bar{\\psi}\\) (percent-spliced-) \\(\\phi\\) (inter-cell heterogeneity) estimation confidence interval \\(\\phi\\). count column means number cells valid gene expression estimate \\(\\psi\\) \\(\\phi\\). can show valid \\(\\phi\\) estimation small confidence interval \\(\\phi\\) vs.Â \\(\\bar{\\psi}\\) scatter plot  order \\(\\phi\\) meta splicing site decreasing order, top list highly variable exons. use highest one MYL6 metasite_4 example, first show single cell \\(\\psi\\) distribution,color bar indicates average gene expression:  also show \\(\\psi\\) distribution cell embedding umap:  see different alternative splicing patterns exon epithlials immune cells. Epithlials highly spliced metasite_4 MYL6, T cells macrophages tend splice meta site . trace back original sites, find metasite_4 contains two sites: can compare sashimi plot epithlials immune cells group see exons differetially spliced two cell groups.   sashimi plot can see exon \\(6\\) differetial alternative splicing epithlials immune cells.","code":"iso = readRDS(\"../inst/extdata/data/sc_iso_count.rds\") crc_splice = creatSplice_from_df(iso) temp = getIsoform(crc_splice,c(\"MYL6\",\"RPS24\")) head(temp) ##                    cell  gene ## 575755 AAACGGGGTTATGTGC RPS24 ## 575756 AAACGGGGTTATGTGC RPS24 ## 575757 AAACGGGGTTATGTGC RPS24 ## 575758 AAACGGGGTTATGTGC RPS24 ## 575759 AAACGGGGTTATGTGC RPS24 ## 575760 AAACGGGGTTATGTGC RPS24 ##                                                                                                            isoform ## 575755                   78033859,78033904|78035352,78035417|78035511,78035720|78037194,78037304|78040615,78040692 ## 575756 78033863,78033904|78035352,78035417|78035511,78035720|78037194,78037304|78040204,78040225|78040615,78035580 ## 575757 78033863,78033904|78035352,78035417|78035511,78035720|78037194,78037304|78040204,78040225|78040615,78040694 ## 575758 78033863,78033904|78035352,78035417|78035511,78035720|78037194,78037304|78040204,78040225|78040615,78040695 ## 575759 78033863,78033904|78035352,78035417|78035511,78035720|78037194,78037304|78040204,78040225|78040615,78040696 ## 575760 78033863,78033904|78035352,78035417|78035511,78035720|78037194,78037304|78040204,78040225|78040615,78040697 ##            count     polyA ## 575755 0.1904762 1.0000000 ## 575756 0.3333333 0.0000000 ## 575757 3.3333333 0.9914286 ## 575758 1.3333333 1.0000000 ## 575759 1.6666667 0.9898305 ## 575760 6.0000000 0.9949483 heg = HighExprsGene(crc_splice,thresh = 500) head(heg) ## [1] \"ABRACL\" \"ACTB\"   \"ACTG1\"  \"ACTN4\"  \"AGR2\"   \"AIF1\" length(heg) ## [1] 752 plan(strategy = \"multisession\",workers = 8) crc_splice = geneSiteTable(crc_splice,gene_bed,genes = heg,eps = 0.05,verbose = FALSE) getMetaSites(crc_splice,\"MYL6\") ## metaSite object with  225  cells and  4 meta splicing sites, which are merged from  25 original splicing sites. ## The head of the gene count matrix for each meta site is: ##                  metasite_1 metasite_2 metasite_3 metasite_4 ## AAACGGGGTTATGTGC         29         28         29         29 ## AACCATGAGCCACGCT          5          4          5          5 ## AACCATGCAAGCCTAT          6          5          5          5 ## AACTCTTCAAGTAATG          3          2          3          2 ## AAGACCTAGCTGAAAT          2          1          2          2 ## AAGACCTTCAAACGGG         12          9         12         12 ## The head of the spliced in count matrix for each meta site is: ##                  metasite_1 metasite_2 metasite_3 metasite_4 ## AAACGGGGTTATGTGC         29         28         29          2 ## AACCATGAGCCACGCT          5          4          5          0 ## AACCATGCAAGCCTAT          6          5          5          0 ## AACTCTTCAAGTAATG          3          2          2          2 ## AAGACCTAGCTGAAAT          2          1          2          1 ## AAGACCTTCAAACGGG         12          9         12          7 plan(strategy = \"multisession\",workers = 8) crc_phi = genesSitesPhi(crc_splice,genes = heg,method = \"beta\",verbose = FALSE) head(crc_phi) ##      gene meta_sites  mean_psi        phi      phi_lwr   phi_upr count ## 1    AGR2 metasite_2 0.7553166 0.05558393 -0.007364070 0.1185319    20 ## 2 ANAPC11 metasite_2 0.4206358 0.15273095  0.060189270 0.2452726    28 ## 3 ANAPC11 metasite_6 0.4774544 0.14312845  0.050723033 0.2355339    28 ## 4    AREG metasite_2 0.8635209 0.10122846  0.002846471 0.1996104    23 ## 5    ATF3 metasite_6 0.7075183 0.13312699  0.040007757 0.2262462    21 ## 6  BCL2A1 metasite_2 0.1698188 0.09520912  0.021722143 0.1686961    32 ##    phi_conf ## 1 0.1258960 ## 2 0.1850834 ## 3 0.1848108 ## 4 0.1967640 ## 5 0.1862385 ## 6 0.1469739 phiPlot(crc_phi,annot_col = \"gene\") head(crc_phi[order(crc_phi$phi,decreasing = TRUE),]) ##     gene meta_sites  mean_psi       phi    phi_lwr   phi_upr count   phi_conf ## 41  MYL6 metasite_4 0.3110294 0.2979716 0.23732462 0.3586186   111 0.12129397 ## 66  SAT1 metasite_3 0.6718207 0.2067908 0.16702254 0.2465591   157 0.07953661 ## 25  IER3 metasite_2 0.8422321 0.1924780 0.10616716 0.2787887    53 0.17262158 ## 63 RPS24 metasite_3 0.6695511 0.1822913 0.15178788 0.2127947   221 0.06100680 ## 74 SNHG6 metasite_2 0.8348119 0.1676768 0.08307809 0.2522754    44 0.16919734 ## 16  ELOC metasite_4 0.6006515 0.1593375 0.06683127 0.2518437    34 0.18501247 gene = \"MYL6\" site = \"metasite_4\" psiHist(crc_splice,gene = gene,site = site) embedding = as.data.frame(crc@reductions$umap@cell.embeddings) psiCellPlot(crc_splice,gene = gene,site = site,cell_embedding = embedding) ## [[1]] getMetaSites(crc_splice,\"MYL6\")@sites ## [[1]] ##  [1] \"56158404_out\" \"56158415_out\" \"56158684_in\"  \"56158711_out\" \"56158902_in\"  ##  [6] \"56158920_out\" \"56159498_in\"  \"56159587_in\"  \"56159622_out\" \"56159975_in\"  ## [11] \"56160025_in\"  \"56160055_out\" \"56160148_out\" \"56160243_in\"  \"56160284_out\" ## [16] \"56161465_out\" \"56161547_in\"  \"56162264_in\"  \"56162331_out\" \"56162855_in\"  ##  ## [[2]] ## [1] \"56159730_out\" ##  ## [[3]] ## [1] \"56160320_out\" \"56161387_in\"  ##  ## [[4]] ## [1] \"56160626_in\"  \"56160670_out\" epithlials = colnames(crc)[crc$type == \"epithelial\"] immune = colnames(crc)[crc$type != \"epithelial\"] sashimi(crc_splice,gene = \"MYL6\",cells = epithlials)+xlim(c(56158300,56161500)) ## Warning: Removed 1009 rows containing missing values (`geom_segment()`). sashimi(crc_splice,gene = \"MYL6\",cells = immune,color_id = 2,filter_ratio = 10)+xlim(c(56158300,56161500)) ## Warning: Removed 1719 rows containing missing values (`geom_segment()`)."},{"path":"https://yuntianf.github.io/Longcell/articles/Longcell.html","id":"generalized-likelihood-ratio-test","dir":"Articles","previous_headings":"","what":"Generalized Likelihood Ratio Test","title":"Tutorial for Longcell","text":"Since found splicing heterogeneity epithelials immune cells, differential alternative splicig analysis two cell groups see splicing difference. Still, generalized likelihood ratio test highly expressed genes.  metasite_4 MYL6 one significant result differential alternative splicing analysis immune epithelial cells, follows expectation. last section, observe obvious inter-cell heterogeneity metasite. Besides MYL6, also metasites show siginificant difference. example, metasite_3 RPS24, can observe \\(\\psi\\) distribtion two cell populations sanity check.   histogram see, compared immune cells, RPS24 epthelial preserved metasite_3.","code":"plan(strategy = \"multisession\",workers = 8) group1 = list(epithlials) group2 = list(immune) names(group1) = \"epithlials\" names(group2) = \"immune\" crc_GLRT_sig = genes_groups_GLRT(crc_splice,genes = names(crc_splice@meta_sites),                               group1s = list(epithlials),group2s = list(immune)) ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"optimization failed!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" plan(strategy = \"multisession\",workers = 8) crc_GLRT_sig = suppressWarnings(genes_multigroups_GLRT(spliceOb = crc_splice,                                       genes = names(crc_splice@meta_sites),                                       meta = cell_type,group_col = \"type\")) ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"optimization failed!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"The MLE based on current starting points doesn't converge, will try other starting points!\" ## [1] \"optimization failed!\" head(crc_GLRT_sig[order(crc_GLRT_sig$q),]) ##           group  gene       site            p     alpha1       beta1     alpha2 ## 781  epithelial RPS24 metasite_3 4.594592e-28 15.4360341   2.3924591  4.4251506 ## 836  epithelial  MYL6 metasite_4 1.034219e-26  2.6446410   2.2051834  1.8689681 ## 823  epithelial PCBP2 metasite_3 1.155557e-10  0.8140863   0.5537612 20.2299469 ## 690  epithelial SSBP1 metasite_1 3.452990e-10 12.6321858   4.5543177  0.5977454 ## 300 macrophages SERF2 metasite_2 4.188171e-09  3.8181003 104.3291222  1.6117449 ## 920  epithelial SERF2 metasite_2 1.069562e-08  2.5073500  15.8760372  1.1346810 ##          beta2        emd            q    mean_diff     var_diff ## 781  3.2491754 0.28918950 6.960806e-25 -0.289189500  0.021973232 ## 836 11.1277555 0.40150353 7.834208e-24 -0.401503529 -0.033588820 ## 823 32.2189723 0.28745582 5.835564e-08 -0.209451054 -0.097323939 ## 690  0.2075395 0.19931300 1.307820e-07  0.007272022  0.095257662 ## 300 13.2723842 0.07304176 1.269016e-06  0.072981485  0.005767000 ## 920 18.3328958 0.07810646 2.700643e-06 -0.078106482 -0.003395092 GLRT_sig_plot(crc_GLRT_sig,color_col = \"group\") target_group = \"epithelial\" target_gene = \"RPS24\" target_site = \"metasite_3\" target = crc_GLRT_sig %>% filter(group == target_group,gene == target_gene,site == target_site) target_cells = rownames(cell_type)[cell_type$type == target_group] control_cells = rownames(cell_type)[cell_type$type != target_group] psiHist(crc_splice,gene = target_gene,site = target_site,cells = target_cells,         alpha = target$alpha1,beta = target$beta1) psiHist(crc_splice,gene = target_gene,site = target_site,cells = control_cells,         alpha = target$alpha2,beta = target$beta2) getMetaSites(crc_splice,target_gene)@sites ## [[1]] ##  [1] \"78033904_out\" \"78033986_out\" \"78034232_in\"  \"78034316_out\" \"78034421_out\" ##  [6] \"78035352_in\"  \"78035417_out\" \"78035511_in\"  \"78035646_in\"  \"78037219_in\"  ## [11] \"78037290_out\" \"78037965_in\"  \"78037982_out\" \"78040629_in\"  \"78040647_in\"  ##  ## [[2]] ## [1] \"78035720_out\" \"78037194_in\"  \"78037304_out\" \"78040615_in\"  ##  ## [[3]] ## [1] \"78040204_in\"  \"78040225_out\" sashimi(crc_splice,gene = target_gene,cells = target_cells) sashimi(crc_splice,gene = target_gene,cells = control_cells,color_id = 2)"},{"path":"https://yuntianf.github.io/Longcell/articles/getStart.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"tutorial","text":"tutorial demonstrates use Longcell analyze single cell isoform count data. Due frequent truncations Nanopore long reads sequencing allow identification new ioforms, Longcell stores isoform information sequence exons. instead building cell--isoform matrix, information gene expression isoform expression stored seperately. general steps analysis : regular scRNA-seq gene expression analysis. identify highly variable exons differetial alternative splicing analysis cell groups add interface Seurat, thus can general scRNA-seq gene expression analysis alternative splicing analysis within Seurat object. First, load Longcell packages necessary vignette.","code":"library(Longcell) library(Seurat) #> Attaching SeuratObject library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union"},{"path":"https://yuntianf.github.io/Longcell/articles/getStart.html","id":"annotation","dir":"Articles","previous_headings":"","what":"annotation","title":"tutorial","text":"","code":"gene_bed = readRDS(\"../tests/annotation/gene_bed.rds\") gtf = readRDS(\"../tests/annotation/exon_gtf.rds\")"},{"path":"https://yuntianf.github.io/Longcell/articles/getStart.html","id":"data","dir":"Articles","previous_headings":"","what":"data","title":"tutorial","text":"using sample colorecatal metastasis liver published paper example. single cell isoform quantification sample generated Longcell-pre. can directly generate Seurat object output Longcell-pre.Splice object embedded misc slot Seurat object, stores single cell isoform count. can get access via getSplice(object) check isoform count gene cell via getIsoform(object,gene), example: can first general single cell gene count analysis via regular Seurat process get cell cluster information directly use cell type annotation get marker genes annotate cell clusters.","code":"crc = createSpliceSeurat(path = \"../tests/data/\",project = \"colorectal\",min.cells = 3,min.features = 200) getSplice(crc) #> Splice object with  239  cells and  14733 genes crc_MYL6_iso = getIsoform(crc,\"MYL6\") head(crc_MYL6_iso) #>                  cell gene    start #> 2729 AAACGGGGTTATGTGC MYL6 56158371 #> 2730 AAACGGGGTTATGTGC MYL6 56158371 #> 2731 AAACGGGGTTATGTGC MYL6 56160017 #> 2732 AAACGGGGTTATGTGC MYL6 56160017 #> 2733 AAACGGGGTTATGTGC MYL6 56158359 #> 2734 AAACGGGGTTATGTGC MYL6 56158359 #>                                                              exons      end #> 2729               11|12|13|14|17|22|23|24|27|28|29|31|32|39|40|41 56161573 #> 2730            11|12|13|14|17|22|23|24|27|28|29|31|32|39|40|41|42 56161577 #> 2731                                          28|29|31|32|39|40|41 56161572 #> 2732                                          28|29|31|32|39|40|41 56161575 #> 2733 6|7|8|9|10|11|12|13|14|17|22|23|24|27|28|29|31|32|35|39|40|41 56161574 #> 2734          6|7|8|9|10|11|12|13|14|17|22|23|24|27|28|29|31|32|39 56161473 #>      count     polyA #> 2729     0 1.0000000 #> 2730     1 1.0000000 #> 2731     0 1.0000000 #> 2732     1 0.9736842 #> 2733     1 0.9722222 #> 2734     0 1.0000000 crc <- PercentageFeatureSet(crc, pattern = \"^MT-\", col.name = \"percent.mt\") crc <- SCTransform(crc, method = \"glmGamPoi\",vars.to.regress = \"percent.mt\", verbose = FALSE) crc <-  crc %>%     RunPCA(npcs = 50, verbose = FALSE,approx = F) %>%     RunUMAP(reduction = \"pca\", dims = 1:30,verbose = FALSE) %>%      FindNeighbors(reduction = \"pca\", dims = 1:30,verbose = FALSE) %>%      FindClusters(resolution = 1.5,verbose = FALSE) %>%      identity() #> Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric #> To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation' #> This message will be shown once per session cell_type = read.table(\"../tests/data/cell_type.txt\",header = TRUE) rownames(cell_type) = cell_type$cell crc$type = cell_type[colnames(crc),\"type\"] DimPlot(crc, reduction = \"umap\", group.by = \"type\",pt.size = 1)"},{"path":"https://yuntianf.github.io/Longcell/articles/getStart.html","id":"single-cell-heterogeneity-of-alterative-splicing","dir":"Articles","previous_headings":"","what":"Single cell heterogeneity of alterative splicing","title":"tutorial","text":"Alternative splicing heterogeneity can confident estimated genes high expression multiple cells, common threshold least 10 transcripts 30 cells, thus first filter low expressed genes via total expression. 355 genes can preserved downstream \\(\\phi\\) calculation. gene bed exon gtf annotations optional recommened. Gene bed annotations can used filter signals short exons, volunarable sequencing mapping errors. Gtf annotation can help merge exons always coexisting mutually exclusive, removing replicative signals. can show valid \\(\\phi\\) estimation small confidence interval \\(\\phi\\) vs.Â \\(\\bar{\\psi}\\) scatter plot  order \\(\\phi\\) exon decreasing order, top list highly variable exons. use highest one MYL6 exon35 example, first show single cell \\(\\psi\\) distribution:   see different alternative splicing patterns exon epithlials immune cells. Epithlials highly spliced exon 35 MYL6, T cells macrophages tend splice exon .","code":"heg = HighExprsGene(crc,thresh = 500,slot = \"RNA\") head(heg) #> [1] \"ACTB\"    \"ACTG1\"   \"AGR2\"    \"ALDOA\"   \"ANAPC11\" \"ANXA1\" length(heg) #> [1] 355 crc_phi = genes_exons_phi(crc,genes = heg,gene_bed = gene_bed,gtf = gtf,cores = 8) #> The job will be paralleled on  8  cores. phiPlot(crc_phi,annot_col = \"gene\",midpoint = 0.1) head(crc_phi[order(crc_phi$phi,decreasing = TRUE),]) #>       gene exon  mean_psi       phi   phi_lwr   phi_upr count  phi_conf #> 367   MYL6   35 0.3684847 0.4236739 0.3453027 0.5096018    47 0.1642992 #> 1135  SAT1    9 0.2493341 0.3335311 0.2764232 0.3904058    78 0.1139826 #> 1136  SAT1   10 0.1751983 0.2399843 0.1944966 0.2958238    78 0.1013272 #> 399  NEAT1   39 0.5719830 0.2346518 0.1396089 0.3313117    36 0.1917028 #> 1141  SAT1   16 0.7338286 0.2153306 0.1561497 0.2639450    81 0.1077953 #> 1143  SAT1   18 0.7362526 0.2127588 0.1592439 0.2699973    81 0.1107534 psiHist(crc,gene = \"MYL6\",exon = \"35\") psiCellPlot(crc,gene = \"MYL6\",exons = \"35\",cell_embedding = \"umap\") #> [[1]]"},{"path":"https://yuntianf.github.io/Longcell/articles/getStart.html","id":"generalized-likelihood-ratio-test","dir":"Articles","previous_headings":"","what":"Generalized Likelihood Ratio Test","title":"tutorial","text":"Since found splicing heterogeneity epithelials immune cells, differential alternative splicig analysis two cell groups see splicing difference. first specify non-epithelial cells immune cells cell type annotation generalized likelihood ratio test highly expressed genes immune cells epithelials see alternative splicing difference. Compared epthelials, exons show decreasing splice-immune cells show negative mean change.  first check \\(\\psi\\) distribution MYL6 exon 35 two cell groups âs significant signal.   also check genes, example, RPS24:","code":"crc$group = ifelse(crc$type == \"epithelial\",\"epithelial\",\"immune\") crc_GLRT_sig = genes_groups_GLRT(crc,genes = heg,                               group1s = \"epithelial\",group2s = \"immune\",group_col = \"group\",                               gene_bed = gene_bed,gtf = gtf,q_thresh = 0.05,cores = 8) #> The job will be paralleled on  8  cores. GLRT_sig_plot(crc_GLRT_sig) head(crc_GLRT_sig[order(crc_GLRT_sig$q),]) #>       gene     group1 group2 exon            p   alpha1    beta1   alpha2 #> 633   MYL6 epithelial immune   35 2.309757e-22 4.585580 3.364490 1.296922 #> 913  RPS24 epithelial immune   31 6.644542e-16 6.683290 3.766842 5.211762 #> 924   RPS8 epithelial immune   26 2.079360e-09 8.228405 4.128133 8.025231 #> 923   RPS8 epithelial immune   25 5.550707e-09 8.273600 4.109817 7.561798 #> 922   RPS8 epithelial immune   20 9.443566e-09 8.125215 4.073930 7.573987 #> 273 EIF4A1 epithelial immune   89 2.629369e-07 3.281194 4.891683 1.392122 #>        beta2            q  mean_diff      var_diff #> 633 6.654382 2.556901e-19 -0.4136894 -0.0120241663 #> 913 7.757096 3.677754e-13 -0.2376737 -0.0029256764 #> 924 8.055760 7.672839e-07 -0.1668643 -0.0020203249 #> 923 7.435223 1.536158e-06 -0.1638993 -0.0009411618 #> 922 7.448730 2.090806e-06 -0.1618790 -0.0012499424 #> 273 6.878644 3.325090e-05 -0.2331552 -0.0110961237 psiHist(crc,gene = \"MYL6\",exon = \"35\",group_col = \"group\",group = \"epithelial\",            alpha = 4.585,beta = 3.364) psiHist(crc,gene = \"MYL6\",exon = \"35\",group_col = \"group\",group = \"immune\",             alpha = 1.296922,beta = 6.654382) psiHist(crc,gene = \"RPS24\",exon = \"31\",group_col = \"group\",group = \"epithelial\",            alpha = 6.683290,beta = 3.766842) psiHist(crc,gene = \"RPS24\",exon = \"31\",group_col = \"group\",group = \"immune\",             alpha = 5.211762,beta = 7.757096)"},{"path":"https://yuntianf.github.io/Longcell/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yuntian Fu. Maintainer.","code":""},{"path":"https://yuntianf.github.io/Longcell/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu Y (2025). Longcell: Alternative splicing analysis single cell/visium long reads sequencing. R package version 1.0.0, https://yuntianf.github.io/Longcell/.","code":"@Manual{,   title = {Longcell: Alternative splicing analysis for single cell/visium long reads sequencing},   author = {Yuntian Fu},   year = {2025},   note = {R package version 1.0.0},   url = {https://yuntianf.github.io/Longcell/}, }"},{"path":"https://yuntianf.github.io/Longcell/index.html","id":"longcell","dir":"","previous_headings":"","what":"Alternative splicing analysis for single cell/visium long reads sequencing","title":"Alternative splicing analysis for single cell/visium long reads sequencing","text":"Longcell package single cell/Visium spot alternative splicing analysis. accepts single cell/Visium spot isoform quantification Longcell-pre, gives analysis highly viarable isoform identification, differential alternative splicing.","code":""},{"path":"https://yuntianf.github.io/Longcell/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Alternative splicing analysis for single cell/visium long reads sequencing","text":"easiest way get Longcell install Github:","code":"# install.packages(\"devtools\") devtools::install_github(\"yuntianf/Longcell\",dependencies=TRUE)"},{"path":"https://yuntianf.github.io/Longcell/index.html","id":"instruction","dir":"","previous_headings":"","what":"Instruction","title":"Alternative splicing analysis for single cell/visium long reads sequencing","text":"view documetation tutorial Longcell, visit: https://github.com/yuntianf/Longcell/blob/main/vignettes/Longcell.ipynb","code":""},{"path":"https://yuntianf.github.io/Longcell/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Alternative splicing analysis for single cell/visium long reads sequencing","text":"use Longcell published work, please cite manuscript:","code":"Single cell and spatial alternative splicing analysis with long read sequencing Yuntian Fu, Heonseok Kim, Jenea I. Adams, Susan M. Grimes, Sijia Huang, Billy T. Lau, Anuja Sathe, Paul Hess, Hanlee P. Ji, Nancy R. Zhang bioRxiv 2023.02.23.529769; doi: https://doi.org/10.1101/2023.02.23.529769"},{"path":"https://yuntianf.github.io/Longcell/reference/GLRT.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized likelihood ratio test. â GLRT","title":"Generalized likelihood ratio test. â GLRT","text":"Using beta-binomial model exon count generalized likelihood ratio test two cell populations test psi distribution.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/GLRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized likelihood ratio test. â GLRT","text":"","code":"GLRT(   exon_count1,   gene_count1,   exon_count2,   gene_count2,   iters = 100,   psi_num = 500,   p_thresh = 0.05 )"},{"path":"https://yuntianf.github.io/Longcell/reference/GLRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized likelihood ratio test. â GLRT","text":"exon_count1 vector exon count cell population 1 gene_count1 vector gene count cell population 1 exon_count2 vector exon count cell population 2 gene_count2 vector gene count cell population 2 iters number iterations bootstrap psi_num sample size two beta distributions calculate earth-moving distance p_thresh threshold p-value","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/GLRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized likelihood ratio test. â GLRT","text":"vector p-value parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/GLRT_sig_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"plot for GLRT significant results â GLRT_sig_plot","title":"plot for GLRT significant results â GLRT_sig_plot","text":"plot scatter plot mean change versus variance change exon psi two cell groups","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/GLRT_sig_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot for GLRT significant results â GLRT_sig_plot","text":"","code":"GLRT_sig_plot(   data,   gene_col = \"gene\",   color_col = NULL,   mean_diff = \"mean_diff\",   var_diff = \"var_diff\",   q = \"q\",   mean_diff_thresh = 0.15,   var_diff_thresh = 0.1,   log_q_thresh = 3 )"},{"path":"https://yuntianf.github.io/Longcell/reference/GLRT_sig_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot for GLRT significant results â GLRT_sig_plot","text":"data GLRT result, dataframe output genes_groups_GLRT() gene_col name column data stores gene name mean_diff name column data stores mean difference psi distributions var_diff name column data stores variance difference psi distributions q name column data stores q value mean_diff_thresh minimum mean difference psi show gene name scatter plot var_diff_thresh minimum variance difference psi show gene name scatter plot q_thresh minimum -log(q,10) show gene name scatter plot","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/GLRT_sig_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot for GLRT significant results â GLRT_sig_plot","text":"ggplot object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Seurat-character-numeric-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic HighExprsGene function for Seurat object â HighExprsGene,Seurat,character,numeric-method","title":"generic HighExprsGene function for Seurat object â HighExprsGene,Seurat,character,numeric-method","text":"choose genes high total expression phi calculation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Seurat-character-numeric-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic HighExprsGene function for Seurat object â HighExprsGene,Seurat,character,numeric-method","text":"","code":"# S4 method for Seurat,character,numeric HighExprsGene(object, slot = \"RNA\", thresh = 100)"},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Seurat-character-numeric-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic HighExprsGene function for Seurat object â HighExprsGene,Seurat,character,numeric-method","text":"slot slot name RNA expression assay Seurat object thresh minimum total gene expression","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Seurat-numeric-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic HighExprsGene function for Seurat object â HighExprsGene,Seurat,numeric-method","title":"generic HighExprsGene function for Seurat object â HighExprsGene,Seurat,numeric-method","text":"choose genes high total expression phi calculation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Seurat-numeric-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic HighExprsGene function for Seurat object â HighExprsGene,Seurat,numeric-method","text":"","code":"# S4 method for Seurat,numeric HighExprsGene(object, thresh = 100, slot = \"RNA\")"},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Seurat-numeric-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic HighExprsGene function for Seurat object â HighExprsGene,Seurat,numeric-method","text":"object Seurat object thresh minimum total gene expression slot slot name RNA expression assay Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Splice-numeric-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic HighExprsGene function for Splice object â HighExprsGene,Splice,numeric-method","title":"generic HighExprsGene function for Splice object â HighExprsGene,Splice,numeric-method","text":"choose genes high total expression phi calculation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Splice-numeric-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic HighExprsGene function for Splice object â HighExprsGene,Splice,numeric-method","text":"","code":"# S4 method for Splice,numeric HighExprsGene(object, thresh = 100)"},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene-Splice-numeric-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic HighExprsGene function for Splice object â HighExprsGene,Splice,numeric-method","text":"object Splice object thresh minimum total gene expression","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene.html","id":null,"dir":"Reference","previous_headings":"","what":"generic HighExprsGene function definition â HighExprsGene","title":"generic HighExprsGene function definition â HighExprsGene","text":"generic HighExprsGene function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic HighExprsGene function definition â HighExprsGene","text":"","code":"HighExprsGene(object, thresh, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/HighExprsGene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic HighExprsGene function definition â HighExprsGene","text":"object Splice object thresh threshold minimum total gene expression ... possible parameters","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/Splice-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The Splice Class â Splice-class","title":"The Splice Class â Splice-class","text":"Splice class intermediate data storage class stores isoforms related information needed performing downstream analyses: including highly variable exons detection differential alternative splicing analysis","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/Splice-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The Splice Class â Splice-class","text":"cells vector store cell names genes vector store gene names. isoforms vector store isoform names. count data frame store expression, polyA related information isoform cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/annoExonTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Build exon table from annotated isoforms â annoExonTable","title":"Build exon table from annotated isoforms â annoExonTable","text":"Count exon incorporation annotated isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/annoExonTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build exon table from annotated isoforms â annoExonTable","text":"","code":"annoExonTable(gene_bed, gtf, gene, split = \"|\")"},{"path":"https://yuntianf.github.io/Longcell/reference/annoExonTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build exon table from annotated isoforms â annoExonTable","text":"gene_bed dataframe bed annotation. gtf dataframe gtf annotation. gene target gene build annotated exon table split charater used split exon ids isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/annoExonTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build exon table from annotated isoforms â annoExonTable","text":"data frame exon count annotated isoform, row isoform, col exon.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/annoExonTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build exon table from annotated isoforms â annoExonTable","text":"Input annotated isoforms return table exon count isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/bbmoment.html","id":null,"dir":"Reference","previous_headings":"","what":"bbmoment â bbmoment","title":"bbmoment â bbmoment","text":"moment estimation alpha beta parameters beta-binomial","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/bbmoment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bbmoment â bbmoment","text":"","code":"bbmoment(success, total)"},{"path":"https://yuntianf.github.io/Longcell/reference/bbmoment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bbmoment â bbmoment","text":"success vector number success total vector number total trials","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/bbmoment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"bbmoment â bbmoment","text":"vector include moment estimation alpha beta","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_dis.html","id":null,"dir":"Reference","previous_headings":"","what":"distance between two psi distribution modeled by beta. â beta_dis","title":"distance between two psi distribution modeled by beta. â beta_dis","text":"significant difference alternative splicing, function calculates earth-moving distance psi distribution two cell populations confidence interval bootstrap.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_dis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"distance between two psi distribution modeled by beta. â beta_dis","text":"","code":"beta_dis(   exon_count1,   gene_count1,   exon_count2,   gene_count2,   iters = 100,   psi_num = 500 )"},{"path":"https://yuntianf.github.io/Longcell/reference/beta_dis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"distance between two psi distribution modeled by beta. â beta_dis","text":"exon_count1 vector exon count cell population 1 gene_count1 vector gene count cell population 1 exon_count2 vector exon count cell population 2 gene_count2 vector gene count cell population 2 iters number iterations bootstrap psi_num sample size two beta distributions calculate earth-moving distance","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_dis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"distance between two psi distribution modeled by beta. â beta_dis","text":"vector distance confidence interval","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate mean value for a beta distribution â beta_mean","title":"calculate mean value for a beta distribution â beta_mean","text":"calculate mean value beta distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate mean value for a beta distribution â beta_mean","text":"","code":"beta_mean(alpha, beta)"},{"path":"https://yuntianf.github.io/Longcell/reference/beta_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate mean value for a beta distribution â beta_mean","text":"alpha alpha beta distribution beta beta beta distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate mean value for a beta distribution â beta_mean","text":"numeric value mean","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_var.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate variance for a beta distribution â beta_var","title":"calculate variance for a beta distribution â beta_var","text":"calculate variance beta distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate variance for a beta distribution â beta_var","text":"","code":"beta_var(alpha, beta)"},{"path":"https://yuntianf.github.io/Longcell/reference/beta_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate variance for a beta distribution â beta_var","text":"alpha alpha beta distribution beta beta beta distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/beta_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate variance for a beta distribution â beta_var","text":"numeric value variance","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneExonCount.html","id":null,"dir":"Reference","previous_headings":"","what":"count exons in each cell â cellGeneExonCount","title":"count exons in each cell â cellGeneExonCount","text":"summarise exon count gene count single cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneExonCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count exons in each cell â cellGeneExonCount","text":"","code":"cellGeneExonCount(exon_table, cell_col = \"cell_id\")"},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneExonCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count exons in each cell â cellGeneExonCount","text":"exon_table dataframe count mutil-exons isoform cell_col name cell column exon table","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneExonCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count exons in each cell â cellGeneExonCount","text":"list exon count table gene count table cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneExonCount.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"count exons in each cell â cellGeneExonCount","text":"Due truncation, exons counted censoring way, exons two exons exon polyA treated spliced , otherwise censor counted.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneSiteCount.html","id":null,"dir":"Reference","previous_headings":"","what":"cellGeneSiteCount â cellGeneSiteCount","title":"cellGeneSiteCount â cellGeneSiteCount","text":"summarise site count gene count single cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneSiteCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cellGeneSiteCount â cellGeneSiteCount","text":"","code":"cellGeneSiteCount(splice_site_table, cell_col = \"cell\", count_col = \"count\")"},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneSiteCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cellGeneSiteCount â cellGeneSiteCount","text":"splice_site_table dataframe count splicing sites isoform cell_col name column recording cell barcode count_col name column recording isoform count cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneSiteCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cellGeneSiteCount â cellGeneSiteCount","text":"list site count table gene count table cell list including two dataframes, fisrt one records gene count site cell, second one record spliced-site count.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/cellGeneSiteCount.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cellGeneSiteCount â cellGeneSiteCount","text":"Due truncation, sites counted censoring way, sites two sites site polyA treated spliced , otherwise censor counted.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/creatSplice_from_df.html","id":null,"dir":"Reference","previous_headings":"","what":"creatSplice_from_df â creatSplice_from_df","title":"creatSplice_from_df â creatSplice_from_df","text":"Create Splice object output file dataframe.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/creatSplice_from_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"creatSplice_from_df â creatSplice_from_df","text":"","code":"creatSplice_from_df(   df,   cell = \"all\",   gene = \"all\",   cell_col = \"cell\",   gene_col = \"gene\",   iso_col = \"isoform\",   exprs_col = \"count\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/creatSplice_from_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"creatSplice_from_df â creatSplice_from_df","text":"df input dataframe. cell vector cells preserved Splice object gene vector genes preserved Splice object cell_col colname cell id count file gene_col colname gene id count file iso_col colname isoform id count file","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/creatSplice_from_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"creatSplice_from_df â creatSplice_from_df","text":"Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/creatSplice_from_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"creatSplice_from_df â creatSplice_from_df","text":"Create Splice object output file dataframe, dataframe contain least four columns, including cell, gene, isoform umi count.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSplice.html","id":null,"dir":"Reference","previous_headings":"","what":"createSplice â createSplice","title":"createSplice â createSplice","text":"Create Splice object output file saveExonList().","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSplice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"createSplice â createSplice","text":"","code":"createSplice(   path,   cell = \"all\",   gene = \"all\",   cell_col = \"cell\",   gene_col = \"gene\",   iso_col = \"exons\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/createSplice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"createSplice â createSplice","text":"path path store output files saveExonList(). cell vector cells preserved Splice object gene vector genes preserved Splice object cell_col colname cell id count file gene_col colname gene id count file iso_col colname isoform id count file","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSplice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"createSplice â createSplice","text":"Create Splice object output file saveExonList().","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSpliceObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Splice object â createSpliceObject","title":"Create a Splice object â createSpliceObject","text":"Create Splice object output file saveExonList().","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSpliceObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Splice object â createSpliceObject","text":"","code":"createSpliceObject(   path,   cell = \"all\",   gene = \"all\",   cell_col = \"cell\",   gene_col = \"gene\",   iso_col = \"exons\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/createSpliceObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Splice object â createSpliceObject","text":"path path store output files saveExonList(). cell vector cells preserved Splice object gene vector genes preserved Splice object cell_col colname cell id count file gene_col colname gene id count file iso_col colname isoform id count file","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSpliceObject.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Splice object â createSpliceObject","text":"Create Splice object output file saveExonList().","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSpliceSeurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Seurat object with Splice object â createSpliceSeurat","title":"Create a Seurat object with Splice object â createSpliceSeurat","text":"Create Seurat Splice object output file saveExonList().","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSpliceSeurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Seurat object with Splice object â createSpliceSeurat","text":"","code":"createSpliceSeurat(   path,   project = \"SeuratProject\",   assay = \"RNA\",   min.cells = 3,   min.features = 20,   names.field = 1,   names.delim = \"_\",   meta.data = NULL,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/createSpliceSeurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Seurat object with Splice object â createSpliceSeurat","text":"path path store output files saveExonList() project name project object assay assay name count matrix min.cells minimum number cells express gene min.features minimum number genes cell express names.field initial identity class cell, choose field cell's name. names.delim initial identity class cell, choose delimiter cell's column name meta.data Additional cell-level metadata add Seurat object. ... parameters Seurat::CreateSeuratObject","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/createSpliceSeurat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Seurat object with Splice object â createSpliceSeurat","text":"Seraut object created store gene expression information, Splice object isoform information. Splice object embedded misc slot Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/dataAnnoCombine.html","id":null,"dir":"Reference","previous_headings":"","what":"combine the table for exon merge â dataAnnoCombine","title":"combine the table for exon merge â dataAnnoCombine","text":"combine merge table data() annotation(b)","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/dataAnnoCombine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"combine the table for exon merge â dataAnnoCombine","text":"","code":"dataAnnoCombine(a, b)"},{"path":"https://yuntianf.github.io/Longcell/reference/dataAnnoCombine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"combine the table for exon merge â dataAnnoCombine","text":"exon merge flag table data b exon merge flag table annotation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/dataAnnoCombine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"combine the table for exon merge â dataAnnoCombine","text":"square matrix logical values, indicating two exons merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/dataAnnoCombine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"combine the table for exon merge â dataAnnoCombine","text":"Exons merged according co-existence mutual exclusiveness isoforms. Isoforms data can different annotations, function choose intersection merge flag","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonExonMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"merge two exons â exonExonMerge","title":"merge two exons â exonExonMerge","text":"merge existence two exons isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonExonMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge two exons â exonExonMerge","text":"","code":"exonExonMerge(a, b)"},{"path":"https://yuntianf.github.io/Longcell/reference/exonExonMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge two exons â exonExonMerge","text":"count vector exon b count vector exon b","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonExonMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merge two exons â exonExonMerge","text":"count vector merged exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonExonMerge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"merge two exons â exonExonMerge","text":"Input count vectors two exons isoform, cencoring one exon can recovered information ","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonMatrixMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"combine the merge flag from data and annotation â exonMatrixMerge","title":"combine the merge flag from data and annotation â exonMatrixMerge","text":"combine merge flag data annotation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonMatrixMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"combine the merge flag from data and annotation â exonMatrixMerge","text":"","code":"exonMatrixMerge(dataExonMergeMatrix, annoExonMergeMatrix = NULL)"},{"path":"https://yuntianf.github.io/Longcell/reference/exonMatrixMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"combine the merge flag from data and annotation â exonMatrixMerge","text":"dataExonMergeMatrix exon merge flag matrix generated data annoExonMergeMatrix exon merge flag matrix generated annotation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonMatrixMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"combine the merge flag from data and annotation â exonMatrixMerge","text":"list vectors variable length,vector represents group exons merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonMatrixMerge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"combine the merge flag from data and annotation â exonMatrixMerge","text":"Input exon merge flag matrix generated data annotation output exon groups merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Build exon table from isoforms â exonTable","title":"Build exon table from isoforms â exonTable","text":"Count exon incorporation isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build exon table from isoforms â exonTable","text":"","code":"exonTable(exons, count, polyA, split = \"|\")"},{"path":"https://yuntianf.github.io/Longcell/reference/exonTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build exon table from isoforms â exonTable","text":"exons vector string representing isoform, sequence exon id. count numerical vector representing count isoform polyA numerical vector representing polyA existence isoform split charater used split exon ids isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build exon table from isoforms â exonTable","text":"data frame exon count isoform, row isoform, col exon.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build exon table from isoforms â exonTable","text":"Input isoforms return table exon count isoform cencoring way","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"merge exons â exonTableMerge","title":"merge exons â exonTableMerge","text":"merge exons according relationship, co-existing mutual exclusive","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge exons â exonTableMerge","text":"","code":"exonTableMerge(exon_table, gene_bed = NULL, gtf = NULL, gene = NULL, sep = \"|\")"},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge exons â exonTableMerge","text":"exon_table dataframe count mutil-exons isoform gene_bed gene bed annotation gtf gtf annotation gene gene refer annotation sep seperation character exons isoform string","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merge exons â exonTableMerge","text":"count matrix merged exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMerge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"merge exons â exonTableMerge","text":"Input dataframe count mutil-exons isoform bed gtf annotation identify relationship exon pairs. Exon sets agreed merged data annotation merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeFlag.html","id":null,"dir":"Reference","previous_headings":"","what":"judge if exons can be merged â exonTableMergeFlag","title":"judge if exons can be merged â exonTableMergeFlag","text":"judge exon gene can merged ","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeFlag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"judge if exons can be merged â exonTableMergeFlag","text":"","code":"exonTableMergeFlag(exon_table)"},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeFlag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"judge if exons can be merged â exonTableMergeFlag","text":"exon_table exon count table output exonTable()","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeFlag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"judge if exons can be merged â exonTableMergeFlag","text":"square matrix logical values, indicating two exons merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeFlag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"judge if exons can be merged â exonTableMergeFlag","text":"Iteratively check pair exons gene co-existing mutually exclusive","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeList.html","id":null,"dir":"Reference","previous_headings":"","what":"merge exons in an exon table according to to be merged list â exonTableMergeList","title":"merge exons in an exon table according to to be merged list â exonTableMergeList","text":"merge exons exon table according merged list","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge exons in an exon table according to to be merged list â exonTableMergeList","text":"","code":"exonTableMergeList(exon_table, merge_list, sep = \"|\")"},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge exons in an exon table according to to be merged list â exonTableMergeList","text":"exon_table dataframe count mutil-exons isoform merge_list list vectors variable length,vector represents group exons merged sep seperation character exons isoform string","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merge exons in an exon table according to to be merged list â exonTableMergeList","text":"count vector merged exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exonTableMergeList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"merge exons in an exon table according to to be merged list â exonTableMergeList","text":"Input dataframe count mutil-exons isoform list indicating exons merged together. Exons group merged meta-exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_corres.html","id":null,"dir":"Reference","previous_headings":"","what":"assign canonical exons to self annotated sub-exons â exon_corres","title":"assign canonical exons to self annotated sub-exons â exon_corres","text":"assign canonical exons self annotated sub-exons","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_corres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assign canonical exons to self annotated sub-exons â exon_corres","text":"","code":"exon_corres(   start,   end,   bed,   exon_id = NULL,   strand_col = \"strand\",   start_col = \"start\",   end_col = \"end\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/exon_corres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign canonical exons to self annotated sub-exons â exon_corres","text":"start, end start end site canonical exon bed self annotated bed gene exon_id vector string name self annotated exon, length self-annotated exons strand_col colname indicate strand self-annotated gene bed start_col, end_col colnames start end sites self-annotated gene bed","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_corres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign canonical exons to self annotated sub-exons â exon_corres","text":"vector sub-exons contained canonical exon.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_len_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"filter out too short exons â exon_len_filter","title":"filter out too short exons â exon_len_filter","text":"filter short exons can confused insertions deletions","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_len_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter out too short exons â exon_len_filter","text":"","code":"exon_len_filter(   gene,   gene_bed,   thresh = 10,   exons = NULL,   exon_id = NULL,   gene_id = \"gene\",   len = \"width\",   strand = \"strand\",   sep = \"|\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/exon_len_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter out too short exons â exon_len_filter","text":"gene name target gene gene_bed gene bed annotation thresh minimum length exon exons selected exons, exon filtering within selection exon_id vector names exon gene_id name gene column bed file len name exon length column bed file strand name strand column bed file sep seperation character exons isoform string","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_len_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter out too short exons â exon_len_filter","text":"vector preserved exons","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_len_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"filter out too short exons â exon_len_filter","text":"sub-exons short existence can confused insertions deletions, can misled downstream alternative splicing analysis.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search if an exon is within an exon group. â exon_search","title":"Search if an exon is within an exon group. â exon_search","text":"Search exon within exon group.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search if an exon is within an exon group. â exon_search","text":"","code":"exon_search(exon, exons_group, sep = \"|\")"},{"path":"https://yuntianf.github.io/Longcell/reference/exon_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search if an exon is within an exon group. â exon_search","text":"exon specified exon observed. exons_group vector strings, one meta-exon sep separator exon meta-exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search if an exon is within an exon group. â exon_search","text":"numerical value representing id meta-exon incorporated specified exon.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/exon_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search if an exon is within an exon group. â exon_search","text":"exons can merged meta-exon due co-existence mutually exclusiveness, exons required observed, need search meta-exon.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/extractExonTable.html","id":null,"dir":"Reference","previous_headings":"","what":"build an exon count table for a gene â extractExonTable","title":"build an exon count table for a gene â extractExonTable","text":"build exon count table gene, row isoform cell column meta-exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/extractExonTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"build an exon count table for a gene â extractExonTable","text":"","code":"extractExonTable(   spliceOb,   gene,   gene_bed = NULL,   cells = \"all\",   exons = \"all\",   exon_len_thresh = 10,   sep = \"|\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/extractExonTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"build an exon count table for a gene â extractExonTable","text":"spliceOb input splice object gene name target gene gene_bed gene bed annotation cells cells use building exon count table exons exon use building exon count table exon_len_thresh minimum length exon preserved exon count table sep seperation character exons isoform string gtf gtf annotation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/extractExonTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"build an exon count table for a gene â extractExonTable","text":"exon count table isoforms cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/extractExonTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"build an exon count table for a gene â extractExonTable","text":"build exon count table gene, row isoform cell column meta-exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable-Splice-list-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_exons_table function for Splice object â geneSiteTable,Splice,list,character-method","title":"generic gene_exons_table function for Splice object â geneSiteTable,Splice,list,character-method","text":"generic gene_exons_table function Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable-Splice-list-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_exons_table function for Splice object â geneSiteTable,Splice,list,character-method","text":"","code":"# S4 method for Splice,list,character geneSiteTable(object, gene_bed, genes, eps, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable-Splice-list-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_exons_table function for Splice object â geneSiteTable,Splice,list,character-method","text":"object Splice object gene_bed gene bed annotation, include gene name gene strand. genes target genes generate meta sites, default genes eps threshold two sites merged ... parameters geneSiteTable.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable.base.html","id":null,"dir":"Reference","previous_headings":"","what":"geneSiteTable.base â geneSiteTable.base","title":"geneSiteTable.base â geneSiteTable.base","text":"interface function apply geneSiteTable_df target genes Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geneSiteTable.base â geneSiteTable.base","text":"","code":"geneSiteTable.base(   spliceOb,   gene_bed,   genes = \"all\",   eps = 0.05,   bed_gene_col = \"gene\",   bed_strand_col = \"strand\",   overwrite = FALSE,   verbose = TRUE )"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geneSiteTable.base â geneSiteTable.base","text":"spliceOb Splice object gene_bed gene bed annotation, include gene name gene strand. genes target genes generate meta sites, default genes eps threshold two sites merged bed_gene_col name column record gene name gene bed bed_strand_col name column record gene strand gene bed overwrite flag decide overwrite computed metaSite object verbose flag indicate print information","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geneSiteTable.base â geneSiteTable.base","text":"Splice object meta sites stored meta_sites slot.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable.base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"geneSiteTable.base â geneSiteTable.base","text":"interface function apply geneSiteTable_df target genes Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable.html","id":null,"dir":"Reference","previous_headings":"","what":"generic geneSiteTable function definition â geneSiteTable","title":"generic geneSiteTable function definition â geneSiteTable","text":"generic geneSiteTable function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic geneSiteTable function definition â geneSiteTable","text":"","code":"geneSiteTable(object, gene_bed, genes, eps, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic geneSiteTable function definition â geneSiteTable","text":"object Splice object gene_bed gene bed annotation, include gene name gene strand. genes target genes generate meta sites, default genes eps threshold two sites merged ... possible parameters genes_groups_GLRT.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable_df.html","id":null,"dir":"Reference","previous_headings":"","what":"geneSiteTable_df â geneSiteTable_df","title":"geneSiteTable_df â geneSiteTable_df","text":"merge sites meta sites summarise site count gene count single cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geneSiteTable_df â geneSiteTable_df","text":"","code":"geneSiteTable_df(   data,   strand,   eps = 0.05,   cell_col = \"cell\",   iso_col = \"isoform\",   count_col = \"count\",   polyA_col = \"polyA\",   split = \"|\",   sep = \",\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geneSiteTable_df â geneSiteTable_df","text":"data dataframe recording isoform gene strand strand target gene eps threshold two sites merged cell_col name column recording cell barcode iso_col name column recording isoform string count_col name column recording isoform count cell polyA_col name column recording polyA existence read split chracter split exon within isoform sep chracter split start end sites exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geneSiteTable_df â geneSiteTable_df","text":"list including two dataframes, fisrt one records gene count site cell, second one record spliced-site count.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSiteTable_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"geneSiteTable_df â geneSiteTable_df","text":"integration function spliceTable() cellGeneSiteCount()","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPhi_from_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"geneSitesPhi_from_beta â geneSitesPhi_from_beta","title":"geneSitesPhi_from_beta â geneSitesPhi_from_beta","text":"compute phi exons gene Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPhi_from_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geneSitesPhi_from_beta â geneSitesPhi_from_beta","text":"","code":"geneSitesPhi_from_beta(   spliceOb,   gene,   cells = \"all\",   mean_psi_lwr = 0.01,   mean_psi_upr = 0.99,   cell_count_thresh = 20,   exprs_thresh = 5,   CI_level = 0.05 )"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPhi_from_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geneSitesPhi_from_beta â geneSitesPhi_from_beta","text":"spliceOb Splice object gene name target gene cells cells use building exon count table cell_count_thresh minimum number cells expressing gene exprs_thresh minimum gene expression calculate exon psi (unbiased estimation) CI_level alpha confidence interval phi estimation exon_len_thresh minimum length exon preserved exon count table","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPhi_from_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geneSitesPhi_from_beta â geneSitesPhi_from_beta","text":"dataframe recording phi estimation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPhi_from_psi.html","id":null,"dir":"Reference","previous_headings":"","what":"geneSitesPhi_from_psi â geneSitesPhi_from_psi","title":"geneSitesPhi_from_psi â geneSitesPhi_from_psi","text":"compute phi exons gene Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPhi_from_psi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geneSitesPhi_from_psi â geneSitesPhi_from_psi","text":"","code":"geneSitesPhi_from_psi(   spliceOb,   gene,   cells = \"all\",   cell_count_thresh = 30,   exprs_thresh = 10,   iters = 100,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPhi_from_psi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geneSitesPhi_from_psi â geneSitesPhi_from_psi","text":"spliceOb Splice object gene name target gene cells cells use building exon count table cell_count_thresh minimum number cells expressing gene exprs_thresh minimum gene expression calculate exon psi (unbiased estimation) iters iteration bootstrap generate confidence interval phi ... parameters geneSitesPsi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPhi_from_psi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geneSitesPhi_from_psi â geneSitesPhi_from_psi","text":"dataframe recording phi estimation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi-Splice-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic geneSitesPsi function for Splice object â geneSitesPsi,Splice,character-method","title":"generic geneSitesPsi function for Splice object â geneSitesPsi,Splice,character-method","text":"generic geneSitesPsi function Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi-Splice-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic geneSitesPsi function for Splice object â geneSitesPsi,Splice,character-method","text":"","code":"# S4 method for Splice,character geneSitesPsi(object, gene, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi-Splice-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic geneSitesPsi function for Splice object â geneSitesPsi,Splice,character-method","text":"object Splice object gene name target gene ... possible parameters geneSitesPsi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi.base.html","id":null,"dir":"Reference","previous_headings":"","what":"geneSitesPsi.base â geneSitesPsi.base","title":"geneSitesPsi.base â geneSitesPsi.base","text":"compute psi sites gene Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geneSitesPsi.base â geneSitesPsi.base","text":"","code":"geneSitesPsi.base(spliceOb, gene, cells = \"all\", exprs_thresh = 10, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geneSitesPsi.base â geneSitesPsi.base","text":"spliceOb Splice object gene name target gene cells cells use building exon count table exprs_thresh minimum threshold gene expression estimate psi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geneSitesPsi.base â geneSitesPsi.base","text":"dataframe contains psi estimation exon cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_exons_psi function definition â geneSitesPsi","title":"generic genes_exons_psi function definition â geneSitesPsi","text":"generic genes_exons_psi function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_exons_psi function definition â geneSitesPsi","text":"","code":"geneSitesPsi(object, gene, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/geneSitesPsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_exons_psi function definition â geneSitesPsi","text":"object Splice object gene name target gene ... possible parameters geneSitesPsi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT-Seurat-character-character-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_GLRT function for Seurat object â gene_GLRT,Seurat,character,character,character-method","title":"generic gene_GLRT function for Seurat object â gene_GLRT,Seurat,character,character,character-method","text":"interface function run GLRT specified exons gene specified two cell groups Seurat object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT-Seurat-character-character-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_GLRT function for Seurat object â gene_GLRT,Seurat,character,character,character-method","text":"","code":"# S4 method for Seurat,character,character,character gene_GLRT(object, gene, group1, group2, slot = \"splice\", group_col = NULL, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT-Seurat-character-character-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_GLRT function for Seurat object â gene_GLRT,Seurat,character,character,character-method","text":"object Seurat object gene name specified gene group1 group name cell name group2 group name cell name slot slot name store Splice object Seurat object group_col group_col NULL, group1 group2 cell names group. group_col specified colname Seurat cell meta data, group1 group2 group names. ... parameters specified gene_exons_table.base()","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT-Seurat-character-character-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic gene_GLRT function for Seurat object â gene_GLRT,Seurat,character,character,character-method","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT-Splice-character-vector-vector-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_GLRT function for Splice object â gene_GLRT,Splice,character,vector,vector-method","title":"generic gene_GLRT function for Splice object â gene_GLRT,Splice,character,vector,vector-method","text":"interface function run GLRT specified exons gene specified two cell groups Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT-Splice-character-vector-vector-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_GLRT function for Splice object â gene_GLRT,Splice,character,vector,vector-method","text":"","code":"# S4 method for Splice,character,vector,vector gene_GLRT(object, gene, group1, group2, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT-Splice-character-vector-vector-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_GLRT function for Splice object â gene_GLRT,Splice,character,vector,vector-method","text":"object Splice object gene name specified gene group1 cells group 1 group2 cells group 2 ... parameters specified geneSiteTable()","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT-Splice-character-vector-vector-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic gene_GLRT function for Splice object â gene_GLRT,Splice,character,vector,vector-method","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT.base.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized likelihood ratio test for a gene. â gene_GLRT.base","title":"Generalized likelihood ratio test for a gene. â gene_GLRT.base","text":"interface function run GLRT specified exons gene specified two cell groups Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized likelihood ratio test for a gene. â gene_GLRT.base","text":"","code":"gene_GLRT.base(   spliceOb,   gene,   group1,   group2,   exons = \"all\",   iters = 100,   psi_num = 500,   group_cell_thresh = 30,   verbose = FALSE,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized likelihood ratio test for a gene. â gene_GLRT.base","text":"spliceOb Splice object gene name specified gene group1 cells group 1 group2 cells group 2 exons specified exons GLRT iters number iterations bootstrap psi_num sample size two beta distributions calculate earth-moving distance group_cell_thresh minimum cell number group GLRT verbose whether print iteration information ... parameters specified geneSiteTable() gene_bed dataframe gene bed annotation gtf dataframe gtf annotation exon_len_thresh minimum length exons GLRT","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized likelihood ratio test for a gene. â gene_GLRT.base","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_GLRT function definition â gene_GLRT","title":"generic gene_GLRT function definition â gene_GLRT","text":"generic gene_GLRT function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_GLRT function definition â gene_GLRT","text":"","code":"gene_GLRT(object, gene, group1, group2, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_GLRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_GLRT function definition â gene_GLRT","text":"object Splice object gene name specified gene group1 cells group 1 group2 cells group 2 ... possible parameters gene_GLRT.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_phi.html","id":null,"dir":"Reference","previous_headings":"","what":"compute phi for exons in a gene â gene_exons_phi","title":"compute phi for exons in a gene â gene_exons_phi","text":"compute phi exons gene Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute phi for exons in a gene â gene_exons_phi","text":"","code":"gene_exons_phi(   spliceOb,   gene,   gene_bed = NULL,   gtf = NULL,   cells = \"all\",   exons = \"all\",   exon_len_thresh = 10,   cell_count_thresh = 30,   exprs_thresh = 10,   iters = 100,   sep = \"|\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute phi for exons in a gene â gene_exons_phi","text":"spliceOb Splice object gene name target gene gene_bed gene bed annotation gtf gtf annotation cells cells use building exon count table exons exon use building exon count table exon_len_thresh minimum length exon preserved exon count table cell_count_thresh minimum number cells expressing gene exprs_thresh minimum gene expression calculate exon psi (unbiased estimation) iters iteration bootstrap generate confidence interval phi sep seperation character exons isoform string","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_phi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute phi for exons in a gene â gene_exons_phi","text":"list exon count table gene count table cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi-Seurat-character-character-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_exons_psi function for Seurat object â gene_exons_psi,Seurat,character,character,character-method","title":"generic gene_exons_psi function for Seurat object â gene_exons_psi,Seurat,character,character,character-method","text":"generic gene_exons_psi function Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi-Seurat-character-character-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_exons_psi function for Seurat object â gene_exons_psi,Seurat,character,character,character-method","text":"","code":"# S4 method for Seurat,character,character,character gene_exons_psi(   object,   gene,   cells = \"all\",   exons = \"all\",   slot = \"splice\",   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi-Seurat-character-character-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_exons_psi function for Seurat object â gene_exons_psi,Seurat,character,character,character-method","text":"object Seurat object embedded Splice object gene name target gene cells cells use building exon count table exons exon use building exon count table slot slot name Splice object embedded Seurat object ... possible parameters gene_exons_psi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi-Splice-character-character-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_exons_psi function for Splice object â gene_exons_psi,Splice,character,character,character-method","title":"generic gene_exons_psi function for Splice object â gene_exons_psi,Splice,character,character,character-method","text":"generic gene_exons_psi function Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi-Splice-character-character-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_exons_psi function for Splice object â gene_exons_psi,Splice,character,character,character-method","text":"","code":"# S4 method for Splice,character,character,character gene_exons_psi(object, gene, cells = \"all\", exons = \"all\", ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi-Splice-character-character-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_exons_psi function for Splice object â gene_exons_psi,Splice,character,character,character-method","text":"object Splice object gene name target gene cells cells use building exon count table exons exon use building exon count table ... possible parameters gene_exons_psi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi.base.html","id":null,"dir":"Reference","previous_headings":"","what":"compute psi for exons in a gene â gene_exons_psi.base","title":"compute psi for exons in a gene â gene_exons_psi.base","text":"compute psi exons gene Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute psi for exons in a gene â gene_exons_psi.base","text":"","code":"gene_exons_psi.base(   spliceOb,   gene,   cells = \"all\",   exons = \"all\",   gene_bed = NULL,   gtf = NULL,   exon_len_thresh = 10,   exprs_thresh = 10,   sep = \"|\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute psi for exons in a gene â gene_exons_psi.base","text":"spliceOb Splice object gene name target gene cells cells use building exon count table exons exon use building exon count table gene_bed gene bed annotation gtf gtf annotation exon_len_thresh minimum length exon preserved exon count table exprs_thresh minimum gene expression calculate exon psi (unbiased estimation) sep seperation character exons isoform string","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute psi for exons in a gene â gene_exons_psi.base","text":"list exon count table gene count table cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_exons_psi function definition â gene_exons_psi","title":"generic genes_exons_psi function definition â gene_exons_psi","text":"generic genes_exons_psi function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_exons_psi function definition â gene_exons_psi","text":"","code":"gene_exons_psi(object, gene, cells, exons, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_psi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_exons_psi function definition â gene_exons_psi","text":"object Splice Seurat object gene name target gene cells cells use building exon count table exons exon use building exon count table ... possible parameters gene_exons_psi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Seurat-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_exons_table function for Seurat object â gene_exons_table,Seurat,character-method","title":"generic gene_exons_table function for Seurat object â gene_exons_table,Seurat,character-method","text":"generic gene_exons_table function Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Seurat-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_exons_table function for Seurat object â gene_exons_table,Seurat,character-method","text":"","code":"# S4 method for Seurat,character gene_exons_table(   object,   gene,   slot = \"splice\",   gene_bed = NULL,   gtf = NULL,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Seurat-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_exons_table function for Seurat object â gene_exons_table,Seurat,character-method","text":"object Seurat object Splice object misc gene name target gene slot slot name Splice object embedded Seurat object gene_bed gene bed annotation gtf gtf annotation ... parameters gene_exons_table.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Seurat-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_exons_table function for Seurat object â gene_exons_table,Seurat-method","title":"generic gene_exons_table function for Seurat object â gene_exons_table,Seurat-method","text":"generic gene_exons_table function Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Seurat-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_exons_table function for Seurat object â gene_exons_table,Seurat-method","text":"","code":"# S4 method for Seurat gene_exons_table(   object,   gene,   slot = \"splice\",   gene_bed = NULL,   gtf = NULL,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Seurat-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_exons_table function for Seurat object â gene_exons_table,Seurat-method","text":"object Seurat object Splice object misc gene name target gene slot slot name Splice object embedded Seurat object gene_bed gene bed annotation gtf gtf annotation ... parameters gene_exons_table.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Splice-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_exons_table function for Splice object â gene_exons_table,Splice,character-method","title":"generic gene_exons_table function for Splice object â gene_exons_table,Splice,character-method","text":"generic gene_exons_table function Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Splice-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_exons_table function for Splice object â gene_exons_table,Splice,character-method","text":"","code":"# S4 method for Splice,character gene_exons_table(object, gene, gene_bed = NULL, gtf = NULL, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Splice-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_exons_table function for Splice object â gene_exons_table,Splice,character-method","text":"object Splice object gene name target gene gene_bed gene bed annotation gtf gtf annotation ... parameters gene_exons_table.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Splice-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_exons_table function for Splice object â gene_exons_table,Splice-method","title":"generic gene_exons_table function for Splice object â gene_exons_table,Splice-method","text":"generic gene_exons_table function Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Splice-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_exons_table function for Splice object â gene_exons_table,Splice-method","text":"","code":"# S4 method for Splice gene_exons_table(object, gene, gene_bed = NULL, gtf = NULL, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table-Splice-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_exons_table function for Splice object â gene_exons_table,Splice-method","text":"object Splice object gene name target gene gene_bed gene bed annotation gtf gtf annotation ... parameters gene_exons_table.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table.base.html","id":null,"dir":"Reference","previous_headings":"","what":"count exons in each cell from a Splice object â gene_exons_table.base","title":"count exons in each cell from a Splice object â gene_exons_table.base","text":"summarise exon count gene count single cell Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count exons in each cell from a Splice object â gene_exons_table.base","text":"","code":"gene_exons_table.base(   spliceOb,   gene,   gene_bed = NULL,   gtf = NULL,   cells = \"all\",   exons = \"all\",   exon_len_thresh = 10,   sep = \"|\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count exons in each cell from a Splice object â gene_exons_table.base","text":"spliceOb Splice object gene name target gene gene_bed gene bed annotation gtf gtf annotation cells cells use building exon count table exons exon use building exon count table exon_len_thresh minimum length exon preserved exon count table sep seperation character exons isoform string","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count exons in each cell from a Splice object â gene_exons_table.base","text":"list exon count table gene count table cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table.base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"count exons in each cell from a Splice object â gene_exons_table.base","text":"Due truncation, exons counted censoring way, exons two exons exon polyA treated spliced , otherwise censor counted.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table.html","id":null,"dir":"Reference","previous_headings":"","what":"generic gene_exons_table function definition â gene_exons_table","title":"generic gene_exons_table function definition â gene_exons_table","text":"generic gene_exons_table function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic gene_exons_table function definition â gene_exons_table","text":"","code":"gene_exons_table(object, gene, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/gene_exons_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic gene_exons_table function definition â gene_exons_table","text":"object Splice Seurat object gene name target gene ... possible parameters genes_groups_GLRT.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi-Splice-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genesSitesPhi function for Splice object â genesSitesPhi,Splice,character-method","title":"generic genesSitesPhi function for Splice object â genesSitesPhi,Splice,character-method","text":"generic genesSitesPhi function Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi-Splice-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genesSitesPhi function for Splice object â genesSitesPhi,Splice,character-method","text":"","code":"# S4 method for Splice,character genesSitesPhi(object, genes, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi-Splice-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genesSitesPhi function for Splice object â genesSitesPhi,Splice,character-method","text":"object Splice object ... parameters genesSitesPhi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi.base.html","id":null,"dir":"Reference","previous_headings":"","what":"compute phi for exons in multi-genes â genesSitesPhi.base","title":"compute phi for exons in multi-genes â genesSitesPhi.base","text":"compute phi exons gene Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute phi for exons in multi-genes â genesSitesPhi.base","text":"","code":"genesSitesPhi.base(   spliceOb,   genes,   cells = \"all\",   cell_count_thresh = 20,   exprs_thresh = 10,   iters = 100,   psi_lwr = 0.1,   psi_upr = 0.9,   phi_conf_thresh = 0.2,   method = match.arg(\"beta\", \"psi\"),   CI_level = 0.05,   verbose = TRUE,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute phi for exons in multi-genes â genesSitesPhi.base","text":"spliceOb Splice object cells cells use building exon count table cell_count_thresh minimum number cells expressing gene exprs_thresh minimum gene expression calculate exon psi (unbiased estimation) iters iteration bootstrap generate confidence interval phi psi_lwr, psi_upr lower upper bound preserve alternative spliced exons phi_conf_thresh maximum length confidence interval filter inconfident phi estimation method method use phi estimation CI_level alpha confidence interval phi estimation verbose flag indeicate intermediate messages printed ... parameters geneSitesPsi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute phi for exons in multi-genes â genesSitesPhi.base","text":"dataframe recording phi estimation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genesSitesPhi function definition â genesSitesPhi","title":"generic genesSitesPhi function definition â genesSitesPhi","text":"generic genesSitesPhi function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genesSitesPhi function definition â genesSitesPhi","text":"","code":"genesSitesPhi(object, genes, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genesSitesPhi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genesSitesPhi function definition â genesSitesPhi","text":"object Splice object genes vector names target gene ... possible parameters","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi-Seurat-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_exons_phi function for Seurat object â genes_exons_phi,Seurat,character-method","title":"generic genes_exons_phi function for Seurat object â genes_exons_phi,Seurat,character-method","text":"generic genes_exons_phi function Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi-Seurat-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_exons_phi function for Seurat object â genes_exons_phi,Seurat,character-method","text":"","code":"# S4 method for Seurat,character genes_exons_phi(object, genes, slot = \"splice\", ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi-Seurat-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_exons_phi function for Seurat object â genes_exons_phi,Seurat,character-method","text":"object Seurat object Splice object misc genes vector names target gene slot slot name Splice object embedded Seurat object ... parameters genes_exons_phi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi-Splice-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_exons_phi function for Splice object â genes_exons_phi,Splice,character-method","title":"generic genes_exons_phi function for Splice object â genes_exons_phi,Splice,character-method","text":"generic genes_exons_phi function Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi-Splice-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_exons_phi function for Splice object â genes_exons_phi,Splice,character-method","text":"","code":"# S4 method for Splice,character genes_exons_phi(object, genes, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi-Splice-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_exons_phi function for Splice object â genes_exons_phi,Splice,character-method","text":"object Splice object genes vector names target gene ... parameters genes_exons_phi.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi.base.html","id":null,"dir":"Reference","previous_headings":"","what":"compute phi for exons in multi-genes â genes_exons_phi.base","title":"compute phi for exons in multi-genes â genes_exons_phi.base","text":"compute phi exons gene Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute phi for exons in multi-genes â genes_exons_phi.base","text":"","code":"genes_exons_phi.base(   spliceOb,   genes,   cells = \"all\",   exons = \"all\",   gene_bed = NULL,   gtf = NULL,   exon_len_thresh = 10,   cell_count_thresh = 30,   exprs_thresh = 10,   iters = 100,   psi_lwr = 0.1,   psi_upr = 0.9,   phi_conf_thresh = 0.2,   sep = \"|\",   cores = 4 )"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute phi for exons in multi-genes â genes_exons_phi.base","text":"spliceOb Splice object genes vector names target gene cells cells use building exon count table exons exon use building exon count table gene_bed gene bed annotation gtf gtf annotation exon_len_thresh minimum length exon preserved exon count table cell_count_thresh minimum number cells expressing gene exprs_thresh minimum gene expression calculate exon psi (unbiased estimation) iters number iterations bootstrapping generate confidence interval psi_lwr, psi_upr lower upper bound preserve alternative spliced exons phi_conf_thresh maximum length confidence interval filter inconfident phi estimation sep seperation character exons isoform string cores number cores parallization","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute phi for exons in multi-genes â genes_exons_phi.base","text":"list exon count table gene count table cell","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_exons_phi function definition â genes_exons_phi","title":"generic genes_exons_phi function definition â genes_exons_phi","text":"generic genes_exons_phi function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_exons_phi function definition â genes_exons_phi","text":"","code":"genes_exons_phi(object, genes, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_exons_phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_exons_phi function definition â genes_exons_phi","text":"object Splice Seurat object genes vector names target gene ... possible parameters","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Seurat-character-character-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat,character,character,character-method","title":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat,character,character,character-method","text":"interface function run GLRT exons multiple genes multiple cell group pairs Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Seurat-character-character-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat,character,character,character-method","text":"","code":"# S4 method for Seurat,character,character,character genes_groups_GLRT(   object,   genes,   group1s,   group2s,   group_col = NULL,   slot = \"splice\",   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Seurat-character-character-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat,character,character,character-method","text":"object Seurat object genes vector gene names GLRT group1s group names cell names group2s group names cell names group_col group_col NULL, group1s group2s cell names group. group_col specified colname Seurat cell meta data, group1s group2s group names. slot slot name store Splice object Seurat object ... parameters genes_groups_GLRT.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Seurat-character-character-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat,character,character,character-method","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Seurat-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat-method","title":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat-method","text":"interface function run GLRT exons multiple genes multiple cell group pairs Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Seurat-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat-method","text":"","code":"# S4 method for Seurat genes_groups_GLRT(   object,   genes,   group1s,   group2s,   group_col = \"target\",   slot = \"splice\",   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Seurat-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat-method","text":"genes vector gene names GLRT group1s group names cell names group2s group names cell names group_col group_col NULL, group1s group2s cell names group. group_col specified colname Seurat cell meta data, group1s group2s group names. slot slot name store Splice object Seurat object ... parameters genes_groups_GLRT.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Seurat-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic genes_groups_GLRT function for Seurat object â genes_groups_GLRT,Seurat-method","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-character-character-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,character,character-method","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,character,character-method","text":"interface function run GLRT exons multiple genes multiple cell group pairs Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-character-character-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,character,character-method","text":"","code":"# S4 method for Splice,character,character,character genes_groups_GLRT(object, genes, group1s, group2s, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-character-character-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,character,character-method","text":"object Splice object genes vector gene names GLRT group1s named list cell names, element cells belonging group group2s named list cell names, element cells belonging group ... parameters gene_GLRT.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-character-character-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,character,character-method","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-character-list-list-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,list,list-method","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,list,list-method","text":"interface function run GLRT exons multiple genes multiple cell group pairs Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-character-list-list-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,list,list-method","text":"","code":"# S4 method for Splice,character,list,list genes_groups_GLRT(object, genes, group1s, group2s, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-character-list-list-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,list,list-method","text":"object Splice object genes vector gene names GLRT group1s named list cell names, element cells belonging group group2s named list cell names, element cells belonging group ... parameters gene_GLRT.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-character-list-list-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice,character,list,list-method","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice-method","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice-method","text":"interface function run GLRT exons multiple genes multiple cell group pairs Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice-method","text":"","code":"# S4 method for Splice genes_groups_GLRT(object, genes, group1s, group2s, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice-method","text":"genes vector gene names GLRT group1s list cell names, element cells belonging group group2s list cell names, element cells belonging group ... parameters specified gene_exons_table.base()","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT-Splice-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic genes_groups_GLRT function for Splice object â genes_groups_GLRT,Splice-method","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT.base.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized likelihood ratio test for multiples gene. â genes_groups_GLRT.base","title":"Generalized likelihood ratio test for multiples gene. â genes_groups_GLRT.base","text":"interface function run GLRT exons multiple genes multiple cell group pairs Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized likelihood ratio test for multiples gene. â genes_groups_GLRT.base","text":"","code":"genes_groups_GLRT.base(   spliceOb,   genes,   group1s,   group2s,   iters = 100,   psi_num = 500,   group_cell_thresh = 30,   q_thresh = 0.05,   filter = TRUE,   verbose = FALSE,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized likelihood ratio test for multiples gene. â genes_groups_GLRT.base","text":"spliceOb Splice object genes vector gene names GLRT group1s named list cell names, element cells belonging group group2s named list cell names, element cells belonging group iters number iterations bootstrap psi_num sample size two beta distributions calculate earth-moving distance group_cell_thresh minimum cell number group GLRT q_thresh threshold q value fdr control verbose print process information ... parameters gene_GLRT.base cores number cores used parallization","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized likelihood ratio test for multiples gene. â genes_groups_GLRT.base","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT.html","id":null,"dir":"Reference","previous_headings":"","what":"generic genes_groups_GLRT function definition â genes_groups_GLRT","title":"generic genes_groups_GLRT function definition â genes_groups_GLRT","text":"generic genes_groups_GLRT function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic genes_groups_GLRT function definition â genes_groups_GLRT","text":"","code":"genes_groups_GLRT(object, genes, group1s, group2s, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_groups_GLRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic genes_groups_GLRT function definition â genes_groups_GLRT","text":"object Splice object genes vector gene names GLRT group1s named list cell names, element cells belonging group group2s named list cell names, element cells belonging group ... possible parameters genes_groups_GLRT.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_multigroups_GLRT.html","id":null,"dir":"Reference","previous_headings":"","what":"genes_multigroups_GLRT â genes_multigroups_GLRT","title":"genes_multigroups_GLRT â genes_multigroups_GLRT","text":"generalized likelihood ratio test multiples gene across multiple cell groups.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_multigroups_GLRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"genes_multigroups_GLRT â genes_multigroups_GLRT","text":"","code":"genes_multigroups_GLRT(   spliceOb,   genes,   meta,   cell_col = \"cell\",   group_col = \"group\",   filter = TRUE,   q_thresh = 0.05,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/genes_multigroups_GLRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"genes_multigroups_GLRT â genes_multigroups_GLRT","text":"spliceOb Splice object genes target genes tested meta dataframe recording meta data , lease two columns, one indicate cell barcode one indicate cell group information. cell_col, group_col column names meta record cell/group info. filter bool flag indicate insignificant results filtered . q_thresh threshold FDR controled q value. ... parameters used gene_GLRT.base.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/genes_multigroups_GLRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"genes_multigroups_GLRT â genes_multigroups_GLRT","text":"dataframe test result. line exon p-values parameters psi distributions two cell populations significant difference","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform-Seurat-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic getIsoform function for Seurat object â getIsoform,Seurat,character-method","title":"generic getIsoform function for Seurat object â getIsoform,Seurat,character-method","text":"extract isoforms multigenes selected cells Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform-Seurat-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic getIsoform function for Seurat object â getIsoform,Seurat,character-method","text":"","code":"# S4 method for Seurat,character getIsoform(object, genes, slot = \"splice\", ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform-Seurat-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic getIsoform function for Seurat object â getIsoform,Seurat,character-method","text":"object Seurat object genes vector genes extract isoforms slot slot name store Splice object Seurat object ... parameters getIsoform.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform-Seurat-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic getIsoform function for Seurat object â getIsoform,Seurat,character-method","text":"dataframe store expression related information isoform.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform-Splice-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic getIsoform function for Splice object â getIsoform,Splice,character-method","title":"generic getIsoform function for Splice object â getIsoform,Splice,character-method","text":"extract isoforms multigenes selected cells Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform-Splice-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic getIsoform function for Splice object â getIsoform,Splice,character-method","text":"","code":"# S4 method for Splice,character getIsoform(object, genes, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform-Splice-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic getIsoform function for Splice object â getIsoform,Splice,character-method","text":"object Splice object genes vector genes extract isoforms ... parameters getIsoform.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform-Splice-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic getIsoform function for Splice object â getIsoform,Splice,character-method","text":"dataframe store expression related information isoform.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform.base.html","id":null,"dir":"Reference","previous_headings":"","what":"extract isoforms â getIsoform.base","title":"extract isoforms â getIsoform.base","text":"extract isoforms multigenes selected cells","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract isoforms â getIsoform.base","text":"","code":"getIsoform.base(spliceob, genes, cells = \"all\")"},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract isoforms â getIsoform.base","text":"spliceob Splice object genes vector genes extract isoforms cells vector cells choose extract isoforms. Default choose cells","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract isoforms â getIsoform.base","text":"dataframe store expression related information isoform.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform.html","id":null,"dir":"Reference","previous_headings":"","what":"generic getIsoform function definition â getIsoform","title":"generic getIsoform function definition â getIsoform","text":"generic getIsoform function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic getIsoform function definition â getIsoform","text":"","code":"getIsoform(object, genes, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/getIsoform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic getIsoform function definition â getIsoform","text":"object Splice object genes vector genes extract isoforms ... possible parameters getIsoform.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getMetaSites.html","id":null,"dir":"Reference","previous_headings":"","what":"getMetaSites â getMetaSites","title":"getMetaSites â getMetaSites","text":"Extract metaSites object gene subset cells splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getMetaSites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getMetaSites â getMetaSites","text":"","code":"getMetaSites(spliceOb, gene, cells = \"all\", verbose = TRUE)"},{"path":"https://yuntianf.github.io/Longcell/reference/getMetaSites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getMetaSites â getMetaSites","text":"spliceOb Splice object gene name target gene cells cells use building exon count table verbose flag indicate output message","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getMetaSites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"getMetaSites â getMetaSites","text":"metaSite object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getSplice.html","id":null,"dir":"Reference","previous_headings":"","what":"extract the Splice object from the Seurat object â getSplice","title":"extract the Splice object from the Seurat object â getSplice","text":"extract Splice object Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getSplice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract the Splice object from the Seurat object â getSplice","text":"","code":"getSplice(object, slot = \"splice\")"},{"path":"https://yuntianf.github.io/Longcell/reference/getSplice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract the Splice object from the Seurat object â getSplice","text":"object seurat object Splice object embedded slot slot name store Splice object Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/getSplice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract the Splice object from the Seurat object â getSplice","text":"Splice object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gtf_bed_corres.html","id":null,"dir":"Reference","previous_headings":"","what":"assign gtf exon annotations to self annotated sub-exons â gtf_bed_corres","title":"assign gtf exon annotations to self annotated sub-exons â gtf_bed_corres","text":"assign gtf exon annotations gene self annotated sub-exons","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gtf_bed_corres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assign gtf exon annotations to self annotated sub-exons â gtf_bed_corres","text":"","code":"gtf_bed_corres(   gtf,   bed,   gene,   gtf_gene_col = \"gene_id\",   bed_gene_col = \"gene\",   transcript_col = \"transname\",   exon_id = NULL,   strand_col = \"strand\",   gtf_start_col = \"start\",   gtf_end_col = \"end\",   bed_start_col = \"start\",   bed_end_col = \"end\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/gtf_bed_corres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign gtf exon annotations to self annotated sub-exons â gtf_bed_corres","text":"gtf dataframe gtf annotation bed dataframe self annotated gene bed gene gene matched gtf_gene_col colname gtf indicates gene id bed_gene_col colname bed indicates gene id transcript_col colname gtf indicates name transcripts exon_id vector string name self annotated exon, length self-annotated exons strand_col colname indicate strand self-annotated gene bed gtf_start_col, gtf_end_col colnames start end sites canonical exons gtf annotation bed_start_col, bed_end_col colnames start end sites canonical exons bed annotation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/gtf_bed_corres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign gtf exon annotations to self annotated sub-exons â gtf_bed_corres","text":"list sub-exon string named isoforms gtf.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/ifMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"judge if two exons can be merged â ifMerge","title":"judge if two exons can be merged â ifMerge","text":"judge two exons can merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/ifMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"judge if two exons can be merged â ifMerge","text":"","code":"ifMerge(a, b)"},{"path":"https://yuntianf.github.io/Longcell/reference/ifMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"judge if two exons can be merged â ifMerge","text":"numerical vector existence exon isoform b numerical vector existence exon isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/ifMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"judge if two exons can be merged â ifMerge","text":"TRUE FALSE, indicating two exons merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/ifMerge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"judge if two exons can be merged â ifMerge","text":"two exons co-existing mutually exclusive, information, can considered one exon downstream analysis","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2bases.html","id":null,"dir":"Reference","previous_headings":"","what":"isoform2bases â isoform2bases","title":"isoform2bases â isoform2bases","text":"transform isoform sequence vector base isoform covered","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2bases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"isoform2bases â isoform2bases","text":"","code":"isoform2bases(isoform, count = 1, sep = \",\", split = \"|\")"},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2bases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"isoform2bases â isoform2bases","text":"isoform isoform sequence, formatted \"s1,e1|s2,e2|...\", s means start site exon e means end site. count count base sep character split start end sites exon. split character split exon isoform sequence.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2bases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"isoform2bases â isoform2bases","text":"vector bases","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2sites.html","id":null,"dir":"Reference","previous_headings":"","what":"isoform2sites â isoform2sites","title":"isoform2sites â isoform2sites","text":"split isoform string vector splicing sites","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"isoform2sites â isoform2sites","text":"","code":"isoform2sites(isoform, split = \"|\", sep = \",\")"},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2sites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"isoform2sites â isoform2sites","text":"isoform string representing isoform split chracter split exon within isoform sep chracter split start end sites exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"isoform2sites â isoform2sites","text":"string vector, element splicing site","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/isoform2sites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"isoform2sites â isoform2sites","text":"split isoform string vector splicing sites","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/junction_count.html","id":null,"dir":"Reference","previous_headings":"","what":"junction_count â junction_count","title":"junction_count â junction_count","text":"collect splice junction isoform sequence","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/junction_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"junction_count â junction_count","text":"","code":"junction_count(isoform, count = 1, polyA = 0, sep = \",\", split = \"|\")"},{"path":"https://yuntianf.github.io/Longcell/reference/junction_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"junction_count â junction_count","text":"isoform isoform sequence, formatted \"s1,e1|s2,e2|...\", s means start site exon e means end site. count count base polyA flag indicate read polyA tail sep character split start end sites exon. split character split exon isoform sequence.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/junction_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"junction_count â junction_count","text":"matrix recording junction count, first column junction identity second column count","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/ll.html","id":null,"dir":"Reference","previous_headings":"","what":"ll â ll","title":"ll â ll","text":"compute log likelihood exon count gene count given beta-binomial distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/ll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ll â ll","text":"","code":"ll(exon_count, n, alpha, beta)"},{"path":"https://yuntianf.github.io/Longcell/reference/ll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ll â ll","text":"exon_count vector exon count n vector gene count length exon_count alpha alpha beta distribution beta beta beta distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/ll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ll â ll","text":"numerical value negative log likelihood","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metaSite-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The metaSite Class â metaSite-class","title":"The metaSite Class â metaSite-class","text":"metaSite class object store meta splicing sites information. includes three slots, gene count spliced-count per cell meta site orginal splicing sites meta site corresponds .","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metaSite-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The metaSite Class â metaSite-class","text":"cellGeneCount cell meta site matrix, recording gene expression count. cellSiteCount cell meta site matrix, recording spliced-count. sites list length number meta splicing sites, element records corresponding original splicing sites.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metaSpliceSite.html","id":null,"dir":"Reference","previous_headings":"","what":"metaSpliceSite â metaSpliceSite","title":"metaSpliceSite â metaSpliceSite","text":"Merge sites meta sites based co-existence mutually exclusive","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metaSpliceSite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metaSpliceSite â metaSpliceSite","text":"","code":"metaSpliceSite(sites_table, count, eps = 0.05)"},{"path":"https://yuntianf.github.io/Longcell/reference/metaSpliceSite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metaSpliceSite â metaSpliceSite","text":"sites_table site count table output sites2matrix() eps threshold two sites merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metaSpliceSite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metaSpliceSite â metaSpliceSite","text":"list two elements, first one count matrix meta splicing sites, second one component meta splicing sites","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metaSpliceSite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"metaSpliceSite â metaSpliceSite","text":"Merge sites meta sites based co-existence mutually exclusive","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metasite_retrieve.html","id":null,"dir":"Reference","previous_headings":"","what":"metasite_retrieve â metasite_retrieve","title":"metasite_retrieve â metasite_retrieve","text":"recover metasites corresponding original sites multiple genes","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metasite_retrieve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metasite_retrieve â metasite_retrieve","text":"","code":"metasite_retrieve(splice_ob, genes, sites)"},{"path":"https://yuntianf.github.io/Longcell/reference/metasite_retrieve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metasite_retrieve â metasite_retrieve","text":"genes vector genes extract isoforms sites vector meta splicing sites, usually format \"metasite_id\" spliceob Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/metasite_retrieve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metasite_retrieve â metasite_retrieve","text":"vector string, element pasted splicing sites meta site.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_bb.html","id":null,"dir":"Reference","previous_headings":"","what":"mle_bb â mle_bb","title":"mle_bb â mle_bb","text":"mle beta-binomial multiple start points avoid local optimization","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_bb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle_bb â mle_bb","text":"","code":"mle_bb(exon_count, gene_count, start = NULL)"},{"path":"https://yuntianf.github.io/Longcell/reference/mle_bb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle_bb â mle_bb","text":"exon_count vector exon count gene_count vector gene count length exon_count start list start points, line pair alpha beta","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_bb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mle_bb â mle_bb","text":"list result mle","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_module.html","id":null,"dir":"Reference","previous_headings":"","what":"mle_module â mle_module","title":"mle_module â mle_module","text":"MLE estimation beta-binomial distribution different number total experiments","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle_module â mle_module","text":"","code":"mle_module(exon_count, gene_count, start = NULL)"},{"path":"https://yuntianf.github.io/Longcell/reference/mle_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle_module â mle_module","text":"exon_count vector exon count gene_count vector gene count length exon_count start list start points, line pair alpha beta","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mle_module â mle_module","text":"mle2 object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_multi_start.html","id":null,"dir":"Reference","previous_headings":"","what":"mle for beta-binomial â mle_multi_start","title":"mle for beta-binomial â mle_multi_start","text":"mle beta-binomial multiple start points avoid local optimization","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_multi_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mle for beta-binomial â mle_multi_start","text":"","code":"mle_multi_start(exon_count, gene_count, start)"},{"path":"https://yuntianf.github.io/Longcell/reference/mle_multi_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mle for beta-binomial â mle_multi_start","text":"exon_count vector exon count gene_count vector gene count length exon_count start list start points, line pair alpha beta","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/mle_multi_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mle for beta-binomial â mle_multi_start","text":"list result mle","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/moduleExtract.html","id":null,"dir":"Reference","previous_headings":"","what":"moduleExtract â moduleExtract","title":"moduleExtract â moduleExtract","text":"extract exons merged according exon merge flag table","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/moduleExtract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"moduleExtract â moduleExtract","text":"","code":"moduleExtract(coef_matrix, eps = 0.05)"},{"path":"https://yuntianf.github.io/Longcell/reference/moduleExtract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"moduleExtract â moduleExtract","text":"coef_matrix square matrix logical values, indicating two sites merged eps threshold two sites merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/moduleExtract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"moduleExtract â moduleExtract","text":"list vectors variable length,vector represents group sites merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/moduleExtract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"moduleExtract â moduleExtract","text":"sites can merged according exon merge flag table extracted together group. different merge groups collected list","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/multiExonsMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"merge multi-exons â multiExonsMerge","title":"merge multi-exons â multiExonsMerge","text":"merge existence multi-exons isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/multiExonsMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge multi-exons â multiExonsMerge","text":"","code":"multiExonsMerge(data)"},{"path":"https://yuntianf.github.io/Longcell/reference/multiExonsMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge multi-exons â multiExonsMerge","text":"data dataframe count mutil-exons isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/multiExonsMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merge multi-exons â multiExonsMerge","text":"count vector merged exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/multiExonsMerge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"merge multi-exons â multiExonsMerge","text":"Input dataframe count mutil-exons isoform, mering pair iteratively","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi.html","id":null,"dir":"Reference","previous_headings":"","what":"count exon phi â phi","title":"count exon phi â phi","text":"calculate alternative splicing heterogeneity exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count exon phi â phi","text":"","code":"phi(x)"},{"path":"https://yuntianf.github.io/Longcell/reference/phi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count exon phi â phi","text":"x vector exon psi across cells","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count exon phi â phi","text":"numeric value exon phi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phiNabla.html","id":null,"dir":"Reference","previous_headings":"","what":"phiNabla â phiNabla","title":"phiNabla â phiNabla","text":"Nabla phi estimation alpha beta","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phiNabla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phiNabla â phiNabla","text":"","code":"phiNabla(alpha, beta)"},{"path":"https://yuntianf.github.io/Longcell/reference/phiNabla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phiNabla â phiNabla","text":"alpha alpha parameter beta distribution beta beta parameter beta distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phiNabla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"phiNabla â phiNabla","text":"numerical vector first derivative alpha beta","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phiPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"phiPlot â phiPlot","title":"phiPlot â phiPlot","text":"plot mean psi vs. phi scatter plot exon, colored confidence interval phi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phiPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phiPlot â phiPlot","text":"","code":"phiPlot(   data,   psi_range = c(0.3, 0.7),   phi_conf_upr = 0.2,   psi_col = \"mean_psi\",   phi_col = \"phi\",   phi_conf_col = \"phi_conf\",   annot_col = \"symbol\",   annot_size = 4 )"},{"path":"https://yuntianf.github.io/Longcell/reference/phiPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phiPlot â phiPlot","text":"data dataframe phi, include columns mean psi, phi, phi confidence interval exon name psi_range exons mean psi within range annotated phi_conf_upr exons phi confidence interval lower threshold annotated psi_col, phi_col, phi_conf_col, annot_col colnames indicate mean psi,phi,phi confidence interval exon annotation within input data annot_size text size exon annotation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf.html","id":null,"dir":"Reference","previous_headings":"","what":"count the confidence interval for exon phi â phi_conf","title":"count the confidence interval for exon phi â phi_conf","text":"using bootstrap calculate confidence interval exon phi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"count the confidence interval for exon phi â phi_conf","text":"","code":"phi_conf(x, iters = 100)"},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"count the confidence interval for exon phi â phi_conf","text":"x vector exon psi across cells iters number sampling iteration bootstrap","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"count the confidence interval for exon phi â phi_conf","text":"numeric value exon phi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"phi_conf_bootstrap â phi_conf_bootstrap","title":"phi_conf_bootstrap â phi_conf_bootstrap","text":"using bootstrap calculate confidence interval exon phi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phi_conf_bootstrap â phi_conf_bootstrap","text":"","code":"phi_conf_bootstrap(x, iters = 100)"},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phi_conf_bootstrap â phi_conf_bootstrap","text":"x vector exon psi across cells iters number sampling iteration bootstrap","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"phi_conf_bootstrap â phi_conf_bootstrap","text":"numeric vector confidence interval","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"phi_conf_delta â phi_conf_delta","title":"phi_conf_delta â phi_conf_delta","text":"using delta method estimate confidence interval exon phi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phi_conf_delta â phi_conf_delta","text":"","code":"phi_conf_delta(alpha, beta, covmat, a = 0.05)"},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phi_conf_delta â phi_conf_delta","text":"alpha alpha parameter beta distribution beta beta parameter beta distribution covmat covariance matrix alpha beta range confidence interval","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_conf_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"phi_conf_delta â phi_conf_delta","text":"numeric vector confidence interval","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_from_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"phi_from_beta â phi_from_beta","title":"phi_from_beta â phi_from_beta","text":"phi estimation beta distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_from_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phi_from_beta â phi_from_beta","text":"","code":"phi_from_beta(alpha, beta)"},{"path":"https://yuntianf.github.io/Longcell/reference/phi_from_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phi_from_beta â phi_from_beta","text":"alpha alpha parameter beta distribution beta beta parameter beta distribution","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_from_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"phi_from_beta â phi_from_beta","text":"numeric value exon phi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_from_psi.html","id":null,"dir":"Reference","previous_headings":"","what":"phi_from_psi â phi_from_psi","title":"phi_from_psi â phi_from_psi","text":"calculate alternative splicing heterogeneity exon based psi estimation","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_from_psi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"phi_from_psi â phi_from_psi","text":"","code":"phi_from_psi(x)"},{"path":"https://yuntianf.github.io/Longcell/reference/phi_from_psi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"phi_from_psi â phi_from_psi","text":"x vector exon psi across cells","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/phi_from_psi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"phi_from_psi â phi_from_psi","text":"numeric value exon phi","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot-Seurat-character-character-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic psiCellPlot function for Seurat object â psiCellPlot,Seurat,character,character,character-method","title":"generic psiCellPlot function for Seurat object â psiCellPlot,Seurat,character,character,character-method","text":"plot psi value cell embeddings Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot-Seurat-character-character-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic psiCellPlot function for Seurat object â psiCellPlot,Seurat,character,character,character-method","text":"","code":"# S4 method for Seurat,character,character,character psiCellPlot(object, gene, exons, cell_embedding = \"umap\", slot = \"splice\", ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot-Seurat-character-character-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic psiCellPlot function for Seurat object â psiCellPlot,Seurat,character,character,character-method","text":"object Seurat object cell embeddings Splice object gene name specified gene exons selected exon plot cell_embedding name embedding use Seurat object slot slot name store Splice object Seurat object ... parameters gene_exons_psi.base calculate psi value","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot-Seurat-character-character-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic psiCellPlot function for Seurat object â psiCellPlot,Seurat,character,character,character-method","text":"ggplot object psi cell embedding","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot.base.html","id":null,"dir":"Reference","previous_headings":"","what":"plot psi value in cell embeddings â psiCellPlot.base","title":"plot psi value in cell embeddings â psiCellPlot.base","text":"plot psi value cell embeddings","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot psi value in cell embeddings â psiCellPlot.base","text":"","code":"psiCellPlot.base(spliceOb, gene, exons, cell_embedding, dims = c(1, 2), ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot psi value in cell embeddings â psiCellPlot.base","text":"spliceOb Splice object gene name specified gene exons selected exon plot cell_embedding dataframe cell embedding coordinates dims Two dimensions use plot cell embedding ... parameters gene_exons_psi.base calculate psi value","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot psi value in cell embeddings â psiCellPlot.base","text":"ggplot object psi cell embedding","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"psiCellPlot â psiCellPlot","title":"psiCellPlot â psiCellPlot","text":"plot psi value cell embeddings","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"psiCellPlot â psiCellPlot","text":"","code":"psiCellPlot(   spliceOb,   gene,   sites,   cell_embedding,   dims = c(1, 2),   cells = \"all\",   exprs_thresh = 10,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"psiCellPlot â psiCellPlot","text":"spliceOb Splice object gene name specified gene sites selected exon plot cell_embedding dataframe cell embedding coordinates dims Two dimensions use plot cell embedding cells cells included psi plot exprs_thresh minimum gene expression required psi calculation ... parameters gene_exons_psi.base calculate psi value","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"psiCellPlot â psiCellPlot","text":"ggplot object psi cell embedding","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlotData.html","id":null,"dir":"Reference","previous_headings":"","what":"psiCellPlotData â psiCellPlotData","title":"psiCellPlotData â psiCellPlotData","text":"Prepare plot data psiCellPlot","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlotData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"psiCellPlotData â psiCellPlotData","text":"","code":"psiCellPlotData(spliceOb, gene, sites, cells = \"all\", exprs_thresh = 10, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlotData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"psiCellPlotData â psiCellPlotData","text":"spliceOb Splice object gene name specified gene sites selected exon plot cells cells included psi plot exprs_thresh minimum gene expression required psi calculation ... parameters geneSitesPsi.base calculate psi value","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiCellPlotData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"psiCellPlotData â psiCellPlotData","text":"list including gene count psi target splicing site plotted","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist-Seurat-character-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic psiHist function for Seurat object â psiHist,Seurat,character,character-method","title":"generic psiHist function for Seurat object â psiHist,Seurat,character,character-method","text":"plot psi distribution cell group histogram Seurat object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist-Seurat-character-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic psiHist function for Seurat object â psiHist,Seurat,character,character-method","text":"","code":"# S4 method for Seurat,character,character psiHist(   object,   gene,   exon,   cells = \"all\",   slot = \"splice\",   group_col = NULL,   group = NULL,   ... )"},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist-Seurat-character-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic psiHist function for Seurat object â psiHist,Seurat,character,character-method","text":"object Seurat object gene name specified gene exon selected exon plot cells cells included psi plot slot slot name store Splice object Seurat object group_col group_col group NULL, parameters cells ignored cells within group selected psi plot group cell group meta.data Seurat ... aesthetic parameters ggplot","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist-Seurat-character-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic psiHist function for Seurat object â psiHist,Seurat,character,character-method","text":"ggplot object psi distribution histogram","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist-Splice-character-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"generic psiHist function for Splice object â psiHist,Splice,character,character-method","title":"generic psiHist function for Splice object â psiHist,Splice,character,character-method","text":"plot psi distribution cell group histogram Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist-Splice-character-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic psiHist function for Splice object â psiHist,Splice,character,character-method","text":"","code":"# S4 method for Splice,character,character psiHist(object, gene, site, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist-Splice-character-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic psiHist function for Splice object â psiHist,Splice,character,character-method","text":"object Splice object gene name specified gene site selected site plot ... aesthetic parameters ggplot","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist-Splice-character-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generic psiHist function for Splice object â psiHist,Splice,character,character-method","text":"ggplot object psi distribution histogram","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist.base.html","id":null,"dir":"Reference","previous_headings":"","what":"plot psi distribution â psiHist.base","title":"plot psi distribution â psiHist.base","text":"plot psi distribution cell group histogram","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist.base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot psi distribution â psiHist.base","text":"","code":"psiHist.base(   spliceOb,   gene,   site,   cells = \"all\",   alpha = NULL,   beta = NULL,   exprs_thresh = 5,   binwidth = 0.05,   low = \"steelblue\",   high = \"coral\",   mid = \"whitesmoke\",   midpoint = NULL,   binsize = 8 )"},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist.base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot psi distribution â psiHist.base","text":"spliceOb Splice object gene name specified gene site selected site plot cells cells included psi plot alpha parameter alpha fitted beta distribution psi beta parameter beta fitted beta distribution psi exprs_thresh minimum gene expression required psi calculation binwidth bin size histogram ranging (0,1] low, high, mid Colors bins represent mean gene count bin midpoint gene count thresh set middle color ... aesthetic parameters ggplot","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist.base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot psi distribution â psiHist.base","text":"ggplot object psi distribution histogram","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist.html","id":null,"dir":"Reference","previous_headings":"","what":"generic psiHist function definition â psiHist","title":"generic psiHist function definition â psiHist","text":"generic psiHist function definition","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generic psiHist function definition â psiHist","text":"","code":"psiHist(object, gene, site, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/psiHist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generic psiHist function definition â psiHist","text":"object Splice object gene name specified gene site selected site plot ... parameters psiHist.base","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/range_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"range_scale â range_scale","title":"range_scale â range_scale","text":"scale data fixed range","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/range_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"range_scale â range_scale","text":"","code":"range_scale(data, lwr = 1, upr = 5)"},{"path":"https://yuntianf.github.io/Longcell/reference/range_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"range_scale â range_scale","text":"data numeric vector lwr, upr lower/upper bound range","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/range_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"range_scale â range_scale","text":"numeric vector recording scaled data","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi.html","id":null,"dir":"Reference","previous_headings":"","what":"sashimi â sashimi","title":"sashimi â sashimi","text":"generate sashimi plot gene Splice object","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sashimi â sashimi","text":"","code":"sashimi(spliceOb, gene, cells, ...)"},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sashimi â sashimi","text":"spliceOb input splice object gene target gene cells target cell population ... Omitted parameters aesthetic  parameters sashimi_plot","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sashimi â sashimi","text":"ggplot object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"sashimi_plot â sashimi_plot","title":"sashimi_plot â sashimi_plot","text":"generate sashimi plot isoform","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sashimi_plot â sashimi_plot","text":"","code":"sashimi_plot(   coverage,   junction,   filter_ratio = 20,   color_id = 1,   region = NULL,   lwr = 1,   upr = 5,   color_set = NULL )"},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sashimi_plot â sashimi_plot","text":"coverage base count junction junction count filter_ratio Threshold filter lowly covered base color_id prdefined color set use, currently two sets region xlab annotation sashimi plot lwr, upr lower/upper bound range color_set vector record user defined color set use, include two colors, one base coverage junction connection.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sashimi_plot â sashimi_plot","text":"ggplot object.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi_plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"sashimi_plot_data â sashimi_plot_data","title":"sashimi_plot_data â sashimi_plot_data","text":"transform isoform count data format sahimi plot","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi_plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sashimi_plot_data â sashimi_plot_data","text":"","code":"sashimi_plot_data(isoforms, counts, polyA = NULL, sep = \",\", split = \"|\")"},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi_plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sashimi_plot_data â sashimi_plot_data","text":"polyA flag indicate read polyA tail sep character split start end sites exon. split character split exon isoform sequence.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sashimi_plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sashimi_plot_data â sashimi_plot_data","text":"list recording base count junction count.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/siteMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"siteMerge â siteMerge","title":"siteMerge â siteMerge","text":"Merge sites within group","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/siteMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"siteMerge â siteMerge","text":"","code":"siteMerge(site_matrix)"},{"path":"https://yuntianf.github.io/Longcell/reference/siteMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"siteMerge â siteMerge","text":"site_matrix binary matrix indicate sites exist","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/siteMerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"siteMerge â siteMerge","text":"vector meta splicing site.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/siteMerge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"siteMerge â siteMerge","text":"Merge sites within group","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites2matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"sites2matrix â sites2matrix","title":"sites2matrix â sites2matrix","text":"convert splicing sites vector reads binary matrix","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites2matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sites2matrix â sites2matrix","text":"","code":"sites2matrix(data, in_sites_index, out_sites_index, strand)"},{"path":"https://yuntianf.github.io/Longcell/reference/sites2matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sites2matrix â sites2matrix","text":"data dataframe recording splicing sites read, including start, middle splicing sites, end polyA in_sites_index string vector recording unique start position middle exons out_sites_index string vector recording unique end position middle exons strand strand gene","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites2matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sites2matrix â sites2matrix","text":"binary matrix indicating splicing sites existence reads gene","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites2matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sites2matrix â sites2matrix","text":"function applies sites2vec reads concat vector results matrix","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites2vec.html","id":null,"dir":"Reference","previous_headings":"","what":"sites2vec â sites2vec","title":"sites2vec â sites2vec","text":"convert splicing sites vector binary vector","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites2vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sites2vec â sites2vec","text":"","code":"sites2vec(start, in_site, out_site, end, polyA, sites_index, strand)"},{"path":"https://yuntianf.github.io/Longcell/reference/sites2vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sites2vec â sites2vec","text":"start number recording start position read in_site string vector recording start position exon read out_site string vector recording end position exon read end number recording end position read polyA bool variable indicate read polyA sites_index string vector recording sites across reads gene strand strand gene","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites2vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sites2vec â sites2vec","text":"binary vector indicating splicing sites existence read","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites2vec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sites2vec â sites2vec","text":"convert splicing sites vector binary vector, spliced-sites set 1, spliced-sites set 0, depleted sites may due technical truncations set NA.","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"sites_coef â sites_coef","title":"sites_coef â sites_coef","text":"judge two sites can merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sites_coef â sites_coef","text":"","code":"sites_coef(a, b, count)"},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sites_coef â sites_coef","text":"numerical vector existence exon isoform b numerical vector existence exon isoform count read count","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sites_coef â sites_coef","text":"TRUE FALSE, indicating two exons merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sites_coef â sites_coef","text":"two exons co-existing mutually exclusive, information, can considered one exon downstream analysis","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"sites_coef_matrix â sites_coef_matrix","title":"sites_coef_matrix â sites_coef_matrix","text":"judge site gene can merged ","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sites_coef_matrix â sites_coef_matrix","text":"","code":"sites_coef_matrix(sites_table, count)"},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sites_coef_matrix â sites_coef_matrix","text":"sites_table site count table output sites2matrix()","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sites_coef_matrix â sites_coef_matrix","text":"square matrix logical values, indicating two exons merged","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/sites_coef_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"sites_coef_matrix â sites_coef_matrix","text":"Iteratively check pair exons gene co-existing mutually exclusive","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/spliceTable.html","id":null,"dir":"Reference","previous_headings":"","what":"spliceTable â spliceTable","title":"spliceTable â spliceTable","text":"Merge sites meta sites gene","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/spliceTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spliceTable â spliceTable","text":"","code":"spliceTable(   data,   strand,   eps = 0.05,   cell_col = \"cell\",   iso_col = \"isoform\",   count_col = \"count\",   polyA_col = \"polyA\",   split = \"|\",   sep = \",\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/spliceTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"spliceTable â spliceTable","text":"data dataframe recording isoform gene strand strand target gene eps threshold two sites merged cell_col name column recording cell barcode iso_col name column recording isoform string count_col name column recording isoform count cell polyA_col name column recording polyA existence read split chracter split exon within isoform sep chracter split start end sites exon","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/spliceTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"spliceTable â spliceTable","text":"metaSite object gene","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/spliceTable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"spliceTable â spliceTable","text":"Merge sites meta sites gene","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/transcript_corres.html","id":null,"dir":"Reference","previous_headings":"","what":"assign canonical isoform to self annotated sub-exons â transcript_corres","title":"assign canonical isoform to self annotated sub-exons â transcript_corres","text":"assign canonical isoform (represented multi canonical exons) self annotated sub-exons","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/transcript_corres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assign canonical isoform to self annotated sub-exons â transcript_corres","text":"","code":"transcript_corres(   starts,   ends,   bed,   exon_id = NULL,   strand_col = \"strand\",   start_col = \"start\",   end_col = \"end\" )"},{"path":"https://yuntianf.github.io/Longcell/reference/transcript_corres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign canonical isoform to self annotated sub-exons â transcript_corres","text":"starts, ends start end sites canonical exons within isoform bed gene bed annotation exon_id vector string name self annotated exon, length self-annotated exons strand_col colname indicate strand self-annotated gene bed start_col, end_col colnames start end sites self-annotated gene bed","code":""},{"path":"https://yuntianf.github.io/Longcell/reference/transcript_corres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign canonical isoform to self annotated sub-exons â transcript_corres","text":"string sub-exons within isoform, seperated \"|\".","code":""},{"path":"https://yuntianf.github.io/Longcell/news/index.html","id":"longcell-010","dir":"Changelog","previous_headings":"","what":"Longcell 0.1.0","title":"Longcell 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
